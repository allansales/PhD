library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
#
# folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
#
# estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
g1_noticias <- g1_noticias %>% mutate(data = anydate(timestamp))
# numero de noticias por dia
# a <- ggplot(, aes(hwy)) + geom_density(kernel = "gaussian")
# a
# para cada portal
## distribuicao do numero de noticias por dia (dd/mm/yy), numero de noticias por ano x meses (algo como violin plot), numero de noticias meses x dia,
## numero de comentarios no tempo (mesma coisa que foi feita para noticias, agora para o numero de comentarios)
## palavras mais utilizadas nas noticias no tempo
## sentimento das noticias ao longo do tempo
## polaridade das noticias ao longo do tempo (analise de valencias entra aqui?)
View(g1_noticias)
a <- ggplot(g1_noticias, aes(data)) + geom_density(kernel = "gaussian")
a
View(g1_noticias)
a <- ggplot(g1_noticias, aes(data)) + geom_area(stat = "bin")
a
a <- ggplot(g1_noticias, aes(data)) + geom_density(kernel = "gaussian")
a
a <- ggplot(g1_noticias, aes(data)) + geom_freqpoly()
a
a <- ggplot(g1_noticias, aes(data)) + geom_bar()
a
View(g1_noticias)
a <- ggplot(g1_noticias, aes(data)) + geom_dotplot()
a
a <- ggplot(g1_noticias, aes(data)) + geom_density(kernel = "gaussian")
a
library(stringr)
?slice
g1_noticias %>% slice(1:10) %>% select(data) %>% str_split("-")
g1_noticias %>% slice(1:10) %>% select(data)
g1_noticias %>% slice(1:10) %>% select(data) %>% type_sum()
g1_noticias %>% slice(1:10) %>% select(data) %>% as.character()
g1_noticias %>% slice(1:10) %>% select(data) %>% as.Date()
g1_noticias %>% slice(1:10) %>% select(data) %>% is.character()
g1_noticias %>% slice(1:10) %>% select(data) %>% as.character()
times <- c("2004-03-21 12:45:33.123456",
"2004/03/21 12:45:33.123456",
"20040321 124533.123456",
"03/21/2004 12:45:33.123456",
"03-21-2004 12:45:33.123456",
"2004-03-21",
"20040321",
"03/21/2004",
"03-21-2004",
"20010101")
anytime(times)
anydate(times)
utctime(times)
utcdate(times)
g1_noticias <- g1_noticias %>% mutate(data = utcdate(timestamp))
View(g1_noticias)
g1_noticias %>% slice(1:10) %>% select(data) %>% is.character()
g1_noticias %>% slice(1:10) %>% select(data) %>% is.Date()
a <- ggplot(g1_noticias, aes(data)) + geom_density(kernel = "gaussian")
a
folha_noticias <- get_data("folhaNoticias")
estadao_noticias <- get_data("estadaoNoticias")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(stringr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
View(noticias)
noticias <- noticias %>% mutate(data = utcdate(noticias))
noticias <- noticias %>% mutate(data = utcdate(timestamp))
View(noticias)
total <- ggplot(noticias, aes(data)) + geom_density(kernel = "gaussian")
total
View(noticias)
total <- ggplot(noticias, aes(x=data, group=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, group=subFonte, fill=Region)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, group=subFonte, fill=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=repercussao, group=subFonte, color=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, y=repercussao, color=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, y=repercussao, color=subFonte)) + geom_smooth(model = lm)
total <- ggplot(noticias, aes(x=data, y=repercussao)) + geom_quantile()
total
total <- ggplot(noticias, aes(x=data, y=repercussao)) + geom_point()
total
g1_noticias <- g1_noticias %>% mutate(data = utcdate(timestamp))
total <- ggplot(g1_noticias, aes(x=data, y=repercussao)) + geom_point()
total
total <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density(kernel = "gaussian")
total
total <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_bar()
total
total <- ggplot(noticias, aes(x=data, width=30, group=subFonte, color=subFonte)) + geom_bar()
total
total <- ggplot(noticias, aes(x=data, width=100, group=subFonte, color=subFonte)) + geom_bar()
total
total <- ggplot(noticias, aes(x=data, width=300, group=subFonte, color=subFonte)) + geom_bar()
total
total <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
total
View(g1_noticias)
View(g1_noticias)
noticias_dia <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(stringr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp))
# numero de noticias por dia
noticias_dia <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
noticias_dia
table(noticias$data, noticias$subFonte)
noticias %>% group_by(subFonte, data) %>% count()
n_noticias_dia <- noticias %>% group_by(subFonte, data) %>% count()
?table
noticias %>% table(data, subFonte)
noticias %>% table("data", "subFonte")
n_noticias_dia <- noticias %>% group_by(subFonte, data) %>% count()
View(n_noticias_dia)
out <- noticias %>% group_by(data, subFonte) %>% summarise(count = n())
View(out)
?cor.test
?table
a <- noticias %>% select(data, subfonte)
a <- noticias %>% select(data, subFonte)
table(a)
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table()
n_noticias_dia
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% tbl_df()
View(n_noticias_dia)
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% data.frame()
View(n_noticias_dia)
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% as.data.frame()
n_noticias_dia
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table()
n_noticias_dia
type_sum(n_noticias_dia)
n_noticias_dia %>% as.matrix()
n_noticias_dia %>% as.matrix() %>% as.data.frame()
n_noticias_dia %>% as.matrix() %>% data.frame()
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% as.data.frame.matrix()
View(n_noticias_dia)
View(n_noticias_dia)
View(n_noticias_dia)
cor.test(noticias_dia)
View(n_noticias_dia)
View(n_noticias_dia)
noticias_dia %>% cor.test(ESTADAO, FOLHASP)
n_noticias_dia %>% cor.test(ESTADAO, FOLHASP)
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% as.data.frame.matrix()
n_noticias_dia %>% cor.test(ESTADAO, FOLHASP)
View(n_noticias_dia)
n_noticias_dia %>% select(ESTADAO, FOLHASP)
n_noticias_dia %>% select(ESTADAO, FOLHASP) %>% cor.test()
noticias %>% group_by(data, subFonte) %>% summarise(count = n())
a<-noticias %>% group_by(data, subFonte) %>% summarise(count = n())
View(a)
a %>% group_by(data, subFonte) %>%
do(as.data.frame(cor(.[,-1], method="spearman", use="pairwise.complete.obs")))
as.data.frame(cor(.[,-1], method="spearman", use="pairwise.complete.obs"))
summarise(group_by(mtcars, cyl), m = mean(disp), sd = sd(disp))
n_noticias_dia %>% summarise(cor_1 = cor.test(ESTADAO, FOLHASP))
?cor.test
cor.test(ESTADAO, FOLHASP, method = "pearson")
cor.test(n_noticias_dia$ESTADAO, n_noticias_dia$FOLHASP, method = "pearson")
cor.test(n_noticias_dia$ESTADAO, n_noticias_dia$FOLHASP, method = "spearman")
cor.test(n_noticias_dia$ESTADAO, n_noticias_dia$FOLHASP, method = "kendall")
n_noticias_dia %>% summarise(cor_1 = cor.test(ESTADAO, FOLHASP, method = "pearson"))
summarise(n_noticias_dia, cor_1 = cor.test(ESTADAO, FOLHASP, method = "pearson"))
summarise(group_by(mtcars, cyl), m = mean(disp), sd = sd(disp))
View(n_noticias_dia)
a<-noticias %>% group_by(data, subFonte) %>% summarise(count = n())
View(a)
View(a)
n_noticias_dia %>% group_by(data, subFonte) %>% summarise(cor_1 = cor.test(ESTADAO, FOLHASP, method = "pearson"))
a %>% group_by(data, subFonte) %>% summarise(cor_1 = cor.test(ESTADAO, FOLHASP, method = "pearson"))
View(a)
a %>% group_by(data, subFonte) %>% summarise(cor_1 = cor.test(count, method = "pearson"))
a %>% group_by(data, subFonte) %>% summarise(cor_1 = cor.test(count, count, method = "pearson"))
n_noticias_dia <- noticias %>% select(data, subFonte) %>% table() %>% as.data.frame.matrix()
View(n_noticias_dia)
mtcars %>%
group_by(cyl) %>%
do(data.frame(Cor=t(cor(.[,3:11], .[,3]))))
mtcars
mtcars %>%
group_by(cyl)
t(cor(.[,3:11], .[,3]))
t(cor(mtcars[,3:11], mtcars[,3]))
cor(mtcars[,3:11], mtcars[,3])
mtcars[,3:11]
mtcars[,3]
cor(mtcars[,3:11], mtcars[,3])
t(cor(mtcars[,3:11], mtcars[,3]))
mtcars %>%
group_by(cyl) %>%
do(data.frame(Cor=t(cor(.[,3:11], .[,3]))))
mtcars %>%
group_by(cyl) %>%
do(Cor=t(cor(.[,3:11], .[,3])))
mtcars %>%
group_by(cyl) %>%
do(data.frame(Cor=cor(.[,3:11], .[,3])))
mtcars %>%
group_by(cyl) %>%
do(data.frame(Cor=t(cor(.[,3:11], .[,3]))))
n_noticias_dia %>% summarize(cor(ESTADAO, FOLHASP))
n_noticias_dia %>% summarize(cor_1 = cor(ESTADAO, FOLHASP))
install.packages("corrr")
library(corrr)
mtcars %>%
select(mpg, disp, hp) %>%
correlate() %>%
focus(mpg)
mtcars %>%
select(mpg, disp, hp) %>%
correlate()
n_noticias_dia %>%
correlate()
n_noticias_dia <- noticias %>% select(data, subFonte) %>%
table() %>% correlate()
n_noticias_dia
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(stringr)
library(corrr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp))
# numero de noticias por dia
noticias_dia <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
noticias_dia
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
View(correlacao_n_noticias_portal)
?correlate
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate(method = "spearman")
correlacao_n_noticias_portal
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate(method = "kendall")
correlacao_n_noticias_portal
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
correlacao_n_noticias_portal
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp))
# numero de noticias por dia
noticias_dia <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
noticias_dia
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp))
# numero de noticias por dia
noticias_dia <- ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
noticias_dia
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
View(correlacao_n_noticias_portal)
ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
# g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp))
# numero de noticias por dia
ggplot(noticias, aes(x=data, group=subFonte, color=subFonte)) + geom_density()
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
View(noticias)
View(noticias)
noticias %>% ggplot(aes(x=data, group=subFonte, color=subFonte)) + geom_density()
noticias %>% ggplot(aes(repercussao, color=subFonte)) + geom_bar()
g1_noticias %>% ggplot(aes(repercussao, color=subFonte)) + geom_bar()
folha_noticias %>% ggplot(aes(repercussao, color=subFonte)) + geom_bar()
estadao_noticias %>% ggplot(aes(repercussao, color=subFonte)) + geom_bar()
install.packages("plotly")
library(plotly)
install.packages(curl)
install.packages("curl")
