noticias %>% plotluck(ano~1, opts=plotluck.options(geom='histogram'))
noticias %>% plotluck(ano~1, opts=plotluck.options(geom='histogram')) + removeGridX()
noticias %>% plotluck(ano~1, opts=plotluck.options(geom='histogram')) + theme_light()
match_politicos_titulo %>% plotluck(n_noticias ~ busca|subfonte) + theme_light()
match_politicos_titulo %>% plotluck(n_noticias ~ media_palavras + busca|subfonte) + theme_light()
match_politicos_titulo %>% plotluck(n_noticias ~ busca|subfonte + media_palavras) + theme_light()
match_politicos_titulo %>% plotluck(n_noticias ~ busca +subfonte + media_palavras) + theme_light()
match_politicos_titulo %>% plotluck(n_noticias ~ busca|subfonte) + theme_light()
match_politicos_titulo %>% plotluck(media_palavras ~ busca|subfonte) + theme_light()
?str_detect
folha_impeachment_noticias <- noticias_folha %>% select(str_detect(titulo, "impeachment"))
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
a<-noticias_tema(noticias_folha, "impeachment", "titulo")
View(a)
#conta numero de noticias com cada candidato / escandalo
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
metricas_noticias_tema <- function(data, pattern, secao, subfonte){
noticias <- noticias_tema(data, pattern, secao)
media_palavras <- noticias %>% select(n_palavras) %>% colMeans()
if(is.nan(media_palavras)){
n_noticias <- 0
media_palavras <- 0
} else {
n_noticias <- table(true_false_vector)[[2]]
}
return(list(n_noticias = n_noticias, media_palavras = media_palavras,
secao = secao, subfonte = subfonte, busca = pattern))
}
#match pelo titulo das noticias
op_titulo_estadao_bullish <- metricas_noticias_tema(noticias_estadao, "bullish", "titulo", "estadao")
metricas_noticias_tema <- function(data, pattern, secao, subfonte){
noticias <- noticias_tema(data, pattern, secao)
media_palavras <- noticias %>% select(n_palavras) %>% colMeans()
if(is.nan(media_palavras)){
n_noticias <- 0
media_palavras <- 0
} else {
n_noticias <- nrow(noticias)
}
return(list(n_noticias = n_noticias, media_palavras = media_palavras,
secao = secao, subfonte = subfonte, busca = pattern))
}
#match pelo titulo das noticias
op_titulo_estadao_bullish <- metricas_noticias_tema(noticias_estadao, "bullish", "titulo", "estadao")
#conta numero de noticias com cada candidato / escandalo
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
metricas_noticias_tema <- function(data, pattern, secao, subfonte){
noticias <- noticias_tema(data, pattern, secao)
media_palavras <- noticias %>% select(n_palavras) %>% colMeans()
if(is.nan(media_palavras)){
n_noticias <- 0
media_palavras <- 0
} else {
n_noticias <- nrow(noticias)
}
return(list(n_noticias = n_noticias, media_palavras = media_palavras,
secao = secao, subfonte = subfonte, busca = pattern))
}
#match pelo titulo das noticias
op_titulo_estadao_bullish <- metricas_noticias_tema(noticias_estadao, "bullish", "titulo", "estadao")
op_titulo_estadao_perfidia <- metricas_noticias_tema(noticias_estadao, "perfídia", "titulo", "estadao")
op_titulo_estadao_carne_fraca <- metricas_noticias_tema(noticias_estadao, "carne fraca", "titulo", "estadao")
op_titulo_estadao_zelotes <- metricas_noticias_tema(noticias_estadao, "zelotes", "titulo", "estadao")
op_titulo_estadao_boca_livre <- metricas_noticias_tema(noticias_estadao, "boca livre", "titulo", "estadao")
op_titulo_folha_bullish <- metricas_noticias_tema(noticias_folha, "bullish", "titulo", "folha")
op_titulo_folha_perfidia <- metricas_noticias_tema(noticias_folha, "perfídia", "titulo", "folha")
op_titulo_folha_carne_fraca <- metricas_noticias_tema(noticias_folha, "carne fraca", "titulo", "folha")
op_titulo_folha_zelotes <- metricas_noticias_tema(noticias_folha, "zelotes", "titulo", "folha")
op_titulo_folha_boca_livre <- metricas_noticias_tema(noticias_folha, "boca livre", "titulo", "folha")
match_titulos <- list(op_titulo_estadao_bullish, op_titulo_estadao_perfidia, op_titulo_estadao_carne_fraca,
op_titulo_estadao_zelotes, op_titulo_estadao_boca_livre, op_titulo_folha_bullish, op_titulo_folha_perfidia, op_titulo_folha_carne_fraca,
op_titulo_folha_zelotes, op_titulo_folha_boca_livre)
match_titulos <- data.table::rbindlist(match_titulos)
ggplot(match_titulos) + geom_col(aes(x=busca, y=n_noticias, fill=subfonte), position = "dodge")
folha_impeachment_noticias <- noticias_tema(noticias_folha, "impeachment", "titulo")
tf_titulo_folha <- gera_tabela_frequencias(folha_impeachment_noticias %>% select(titulo))
wordcloud2(head(tf_titulo_folha,100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
wordcloud2(head(tf_titulo_folha),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
View(tf_titulo_folha)
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
tf_folha_impeachment_titulo <- gera_tabela_frequencias(folha_impeachment_noticias %>% select(titulo))
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
View(tf_folha_impeachment_titulo)
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 2, color = "random-light")
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 0, color = "random-light")
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 3, color = "random-light")
estadao_impeachment_noticias <- noticias_tema(noticias_estadao, "impeachment", "titulo")
tf_estadao_impeachment_titulo <- gera_tabela_frequencias(estadao_impeachment_noticias %>% select(titulo))
wordcloud2(head(tf_estadao_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 3, color = "random-light")
wordcloud2(head(tf_estadao_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
wordcloud2(head(tf_estadao_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 3, color = "random-light")
#library(flexdashboard)
source("mongo_utils.R")
library(corrr)
library(DT)
library(tm)
library(wordcloud2)
library(readr)
library(stringr)
library(plotluck)
noticias <- get_todas_noticias()
n_palavras <- noticias %>% select(conteudo) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_count(" ")+1
noticias <- cbind(noticias, n_palavras)
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
summary(noticias)
noticias %>% filter(repercussao > 0) %>%
plotluck(subFonte ~ repercussao)
noticias %>% filter(repercussao > 0) %>%
plotluck(subFonte ~ n_palavras)
noticias %>% plotluck(ano~1, opts=plotluck.options(geom='histogram')) + theme_light()
noticias_ano_subfonte <- noticias %>% group_by(ano, subFonte) %>% summarise(n_noticias = n())
noticias_ano_subfonte %>% ggplot(aes(ano, n_noticias, fill=subFonte, color=subFonte)) + geom_point() + geom_line()
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate(method="spearman")
datatable(correlacao_n_noticias_portal, options = list(paging=F,info=F,searching=F))
# medias e desvios padroes dos portais por mes
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
ic_noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>%
summarise(media = mean(numero), erro = qt(0.975,df=n()-1)*sd(numero)/sqrt(n()))
ggplot(ic_noticias_mes) + geom_pointrange(aes(subFonte, media, ymin=media-erro, ymax=media+erro)) + facet_wrap(~mes)
## separando por ano de eleicao
# intervalo de confianca de quantidade de noticias por mes
n_noticias_mes_ano_eleicao <- noticias %>% group_by(ano, mes, is_ano_eleicao, subFonte) %>% summarise(numero = n())
ic_noticias_mes_eleicao <- n_noticias_mes_ano_eleicao %>% group_by(mes, is_ano_eleicao, subFonte) %>%
summarise(media = mean(numero), erro = qt(0.975,df=n()-1)*sd(numero)/sqrt(n()))
ggplot(ic_noticias_mes_eleicao) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-erro, ymax=media+erro, color=is_ano_eleicao), position = position_dodge(width = 0.5)) + facet_wrap(~mes)
conteudo_estadao <- select(noticias_estadao, conteudo)
conteudo_folha <- select(noticias_folha, conteudo)
titulo_estadao <- select(noticias_estadao, titulo)
titulo_folha <- select(noticias_folha, titulo)
gera_tabela_frequencias <- function(texto){
texto <- Corpus(VectorSource(texto))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
dtm <- TermDocumentMatrix(texto)
matriz <- as.matrix(dtm)
vector <- sort(rowSums(matriz),decreasing=TRUE)
data <- data.frame(word = names(vector),freq=vector)
return(data)
}
#tf_conteudo_estadao <- gera_tabela_frequencias(conteudo_estadao)
#tf_conteudo_folha <- gera_tabela_frequencias(conteudo_folha)
#write_csv(tf_conteudo_estadao, "frequencia_palavras_estadao.csv")
#write_csv(tf_conteudo_folha, "frequencia_palavras_folha.csv")
tf_titulo_estadao <- gera_tabela_frequencias(titulo_estadao)
wordcloud2(head(tf_titulo_estadao,100), fontFamily = 'Segoe UI', size = 1, color = "random-light")
tf_estadao <- read_csv("frequencia_palavras_estadao.csv")
tf_estadao <- tf_estadao %>% as.data.frame()
wordcloud2(head(tf_estadao,100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
tf_titulo_folha <- gera_tabela_frequencias(titulo_folha)
wordcloud2(head(tf_titulo_folha,100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
tf_folha <- read_csv("frequencia_palavras_folha.csv")
tf_folha <- tf_folha %>% as.data.frame()
wordcloud2(head(tf_folha,100), fontFamily = 'Segoe UI', size = 1, color = "random-light")
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
folha_impeachment_noticias <- noticias_tema(noticias_folha, "impeachment", "titulo")
tf_folha_impeachment_titulo <- gera_tabela_frequencias(folha_impeachment_noticias %>% select(titulo))
wordcloud2(head(tf_folha_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 3, color = "random-light")
estadao_impeachment_noticias <- noticias_tema(noticias_estadao, "impeachment", "titulo")
tf_estadao_impeachment_titulo <- gera_tabela_frequencias(estadao_impeachment_noticias %>% select(titulo))
wordcloud2(head(tf_estadao_impeachment_titulo, 100),  fontFamily = 'Segoe UI', size = 3, color = "random-light")
#conta numero de noticias com cada candidato / escandalo
metricas_noticias_tema <- function(data, pattern, secao, subfonte){
noticias <- noticias_tema(data, pattern, secao)
media_palavras <- noticias %>% select(n_palavras) %>% colMeans()
if(is.nan(media_palavras)){
n_noticias <- 0
media_palavras <- 0
} else {
n_noticias <- nrow(noticias)
}
return(list(n_noticias = n_noticias, media_palavras = media_palavras,
secao = secao, subfonte = subfonte, busca = pattern))
}
#match pelo titulo das noticias
op_titulo_estadao_bullish <- metricas_noticias_tema(noticias_estadao, "bullish", "titulo", "estadao")
op_titulo_estadao_perfidia <- metricas_noticias_tema(noticias_estadao, "perfídia", "titulo", "estadao")
op_titulo_estadao_carne_fraca <- metricas_noticias_tema(noticias_estadao, "carne fraca", "titulo", "estadao")
op_titulo_estadao_zelotes <- metricas_noticias_tema(noticias_estadao, "zelotes", "titulo", "estadao")
op_titulo_estadao_boca_livre <- metricas_noticias_tema(noticias_estadao, "boca livre", "titulo", "estadao")
op_titulo_folha_bullish <- metricas_noticias_tema(noticias_folha, "bullish", "titulo", "folha")
op_titulo_folha_perfidia <- metricas_noticias_tema(noticias_folha, "perfídia", "titulo", "folha")
op_titulo_folha_carne_fraca <- metricas_noticias_tema(noticias_folha, "carne fraca", "titulo", "folha")
op_titulo_folha_zelotes <- metricas_noticias_tema(noticias_folha, "zelotes", "titulo", "folha")
op_titulo_folha_boca_livre <- metricas_noticias_tema(noticias_folha, "boca livre", "titulo", "folha")
match_titulos <- list(op_titulo_estadao_bullish, op_titulo_estadao_perfidia, op_titulo_estadao_carne_fraca,
op_titulo_estadao_zelotes, op_titulo_estadao_boca_livre, op_titulo_folha_bullish, op_titulo_folha_perfidia, op_titulo_folha_carne_fraca,
op_titulo_folha_zelotes, op_titulo_folha_boca_livre)
match_titulos <- data.table::rbindlist(match_titulos)
ggplot(match_titulos) + geom_col(aes(x=busca, y=n_noticias, fill=subfonte), position = "dodge")
# match pelo conteudo das noticias
op_conteudo_estadao_bullish <- metricas_noticias_tema(noticias_estadao, "bullish", "conteudo", "estadao")
op_conteudo_estadao_perfidia <- metricas_noticias_tema(noticias_estadao, "perfídia", "conteudo", "estadao")
op_conteudo_estadao_carne_fraca <- metricas_noticias_tema(noticias_estadao, "carne fraca", "conteudo", "estadao")
op_conteudo_estadao_zelotes <- metricas_noticias_tema(noticias_estadao, "zelotes", "conteudo", "estadao")
op_conteudo_estadao_boca_livre <- metricas_noticias_tema(noticias_estadao, "boca livre", "conteudo", "estadao")
op_conteudo_folha_bullish <- metricas_noticias_tema(noticias_folha, "bullish", "conteudo", "folha")
op_conteudo_folha_perfidia <- metricas_noticias_tema(noticias_folha, "perfídia", "conteudo", "folha")
op_conteudo_folha_carne_fraca <- metricas_noticias_tema(noticias_folha, "carne fraca", "conteudo", "folha")
op_conteudo_folha_zelotes <- metricas_noticias_tema(noticias_folha, "zelotes", "conteudo", "folha")
op_conteudo_folha_boca_livre <- metricas_noticias_tema(noticias_folha, "boca livre", "conteudo", "folha")
match_conteudo <- list(op_conteudo_estadao_bullish, op_conteudo_estadao_perfidia,
op_conteudo_estadao_carne_fraca, op_conteudo_estadao_zelotes, op_conteudo_estadao_boca_livre, op_conteudo_folha_bullish, op_conteudo_folha_perfidia,
op_conteudo_folha_carne_fraca, op_conteudo_folha_zelotes, op_conteudo_folha_boca_livre)
match_conteudo <- data.table::rbindlist(match_conteudo)
dados_noticias <- bind_rows(match_conteudo, match_titulos)
ggplot(match_conteudo) + geom_col(aes(x=busca, y=n_noticias, fill=subfonte), position = "dodge")
op_titulo_estadao_lava_jato <- metricas_noticias_tema(noticias_estadao, "lava jato", "titulo", "estadao")
op_titulo_folha_lava_jato <- metricas_noticias_tema(noticias_folha, "lava jato", "titulo", "folha")
match_titulos_lj <- list(op_titulo_estadao_lava_jato, op_titulo_folha_lava_jato, op_titulo_estadao_bullish, op_titulo_estadao_perfidia, op_titulo_estadao_carne_fraca,
op_titulo_estadao_zelotes, op_titulo_estadao_boca_livre, op_titulo_folha_bullish, op_titulo_folha_perfidia, op_titulo_folha_carne_fraca,
op_titulo_folha_zelotes, op_titulo_folha_boca_livre)
match_titulos_lj <- data.table::rbindlist(match_titulos_lj)
ggplot(match_titulos_lj) + geom_col(aes(x=busca, y=n_noticias, fill=subfonte), position = "dodge")
op_conteudo_estadao_lava_jato <- metricas_noticias_tema(noticias_estadao, "lava jato", "conteudo", "estadao")
op_conteudo_folha_lava_jato <- metricas_noticias_tema(noticias_folha, "lava jato", "conteudo", "folha")
match_conteudo_lj <- list(op_conteudo_estadao_lava_jato, op_conteudo_folha_lava_jato, op_conteudo_estadao_bullish, op_conteudo_estadao_perfidia,
op_conteudo_estadao_carne_fraca, op_conteudo_estadao_zelotes, op_conteudo_estadao_boca_livre, op_conteudo_folha_bullish, op_conteudo_folha_perfidia,
op_conteudo_folha_carne_fraca, op_conteudo_folha_zelotes, op_conteudo_folha_boca_livre)
match_conteudo_lj <- data.table::rbindlist(match_conteudo_lj)
ggplot(match_conteudo_lj) + geom_col(aes(x=busca, y=n_noticias, fill=subfonte), position = "dodge")
noticias_estadao_eleicao <- noticias_estadao %>% filter(ano==2014, dia_do_ano >=187, dia_do_ano<=279)
noticias_folha_eleicao <- noticias_folha %>% filter(ano==2014, dia_do_ano >=187, dia_do_ano<=279)
dilma_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "dilma", "titulo", "estadao")
lula_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "lula", "titulo", "estadao")
marina_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "marina", "titulo", "estadao")
levy_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "levy", "titulo", "estadao")
aecio_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "aécio", "titulo", "estadao")
eduardo_jorge_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "eduardo jorge", "titulo", "estadao")
luciana_estadao <- metricas_noticias_tema(noticias_estadao_eleicao, "luciana genro", "titulo", "estadao")
dilma_folha <- metricas_noticias_tema(noticias_folha_eleicao, "dilma", "titulo", "folha")
lula_folha <- metricas_noticias_tema(noticias_folha_eleicao, "lula", "titulo", "folha")
marina_folha <- metricas_noticias_tema(noticias_folha_eleicao, "marina", "titulo", "folha")
levy_folha <- metricas_noticias_tema(noticias_folha_eleicao, "levy", "titulo", "folha")
aecio_folha <- metricas_noticias_tema(noticias_folha_eleicao, "aécio", "titulo", "folha")
eduardo_jorge_folha <- metricas_noticias_tema(noticias_folha_eleicao, "eduardo jorge", "titulo", "folha")
luciana_folha <- metricas_noticias_tema(noticias_folha_eleicao, "luciana genro", "titulo", "folha")
match_politicos_titulo <- list(dilma_folha, dilma_estadao, lula_estadao, lula_folha, marina_estadao, marina_folha, levy_estadao, levy_folha,
aecio_estadao, aecio_folha, eduardo_jorge_estadao, eduardo_jorge_folha, luciana_estadao, luciana_folha)
match_politicos_titulo <- data.table::rbindlist(match_politicos_titulo)
match_politicos_titulo %>% plotluck(n_noticias ~ busca|subfonte) + theme_light()
ggplot(match_politicos_titulo) + geom_col(aes(x=busca, y=media_palavras, fill=subfonte), position = "dodge")
match_politicos_titulo %>% plotluck(media_palavras ~ busca|subfonte) + theme_light()
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao)
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao)
View(media_noticias_dia)
View(media_noticias_dia)
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao) %>% group_by(subFonte) %>% summarise(media = mean(n()))
View(media_noticias_dia)
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao) %>% group_by(subFonte, dia) %>% summarise(media = n())
View(media_noticias_dia)
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao) %>% group_by(subFonte, data) %>% summarise(media = n())
View(media_noticias_dia)
media_noticias_dia <- bind_rows(noticias_folha, noticias_estadao) %>%
group_by(subFonte, data) %>% summarise(n_noticias = n()) %>%
group_by(subFonte) %>% summarise(media = mean(n_noticias))
View(media_noticias_dia)
numero_noticias_dia <- bind_rows(noticias_folha, noticias_estadao) %>%
group_by(subFonte, data) %>% summarise(n_noticias = n())
media_noticias_dia <- numero_noticias_dia %>%
group_by(subFonte) %>% summarise(media = mean(n_noticias))
View(numero_noticias_dia)
View(numero_noticias_dia)
numero_noticias_dia %>% plotluck(n_noticias ~ data + subfonte)
numero_noticias_dia %>% plotluck(n_noticias ~ data|subfonte)
View(numero_noticias_dia)
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte
)
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, plotluck.options("box"))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, plotluck.options(geom="box"))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='box'))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='hex'))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='scatter'))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='scatter')) + theme_light()
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='spine')) + theme_light()
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='box')) + theme_light()
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
numero_noticias_dia %>% plotluck(n_noticias ~ subFonte, opts=plotluck.options(geom='box')) + theme_light()
media_noticias_dia <- numero_noticias_dia %>%
group_by(subFonte) %>% summarise(media = mean(n_noticias))
media_noticias_dia
media_noticias_dia <- numero_noticias_dia %>%
group_by(subFonte) %>% summarise(media = mean(n_noticias), mediana = median(n_noticias))
media_noticias_dia
folha_impeachment_noticias <- noticias_tema(noticias_folha, "impeachment", "titulo")
estadao_impeachment_noticias <- noticias_tema(noticias_estadao, "impeachment", "titulo")
View(folha_impeachment_noticias)
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="17/04/2016")
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="17-04-2016")
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2014-04-17")
View(folha_impeachment_noticias)
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17")
View(folha_dia_impeachment_noticias)
estadao_dia_impeachment_noticias <- estadao_impeachment_noticias %>% filter(data=="2016-04-17")
folha_dia_impeachment_noticias
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17")
estadao_dia_impeachment_noticias <- estadao_impeachment_noticias %>% filter(data=="2016-04-17")
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
media_noticias_dia <- numero_noticias_dia %>%
group_by(subFonte) %>% summarise(media = mean(n_noticias), mediana = median(n_noticias))
folha_impeachment_noticias <- noticias_tema(noticias_folha, "impeachment", "titulo")
estadao_impeachment_noticias <- noticias_tema(noticias_estadao, "impeachment", "titulo")
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17")
estadao_dia_impeachment_noticias <- estadao_impeachment_noticias %>% filter(data=="2016-04-17")
folha_dia_impeachment_noticias
View(folha_dia_impeachment_noticias)
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17") %>% n()
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17") %>% n(.)
folha_dia_impeachment_noticias <- folha_impeachment_noticias %>% filter(data=="2016-04-17") %>% nrow()
folha_dia_impeachment_noticias
estadao_dia_impeachment_noticias <- estadao_impeachment_noticias %>% filter(data=="2016-04-17") %>% nrow()
total_noticias_dia_impeachment_folha <- noticias_folha %>% filter(data=="2016-04-17") %>% nrow()
total_noticias_dia_impeachment_estadao <- noticias_estadao %>% filter(data=="2016-04-17") %>% nrow()
t
total_noticias_dia_impeachment_folha
total_noticias_dia_impeachment_estadao
media_noticias_dia
total_noticias_dia <- c(total_noticias_dia_impeachment_estadao, total_noticias_dia_impeachment_folha)
impeachment_titulo <- c(estadao_dia_impeachment_noticias, folha_dia_impeachment_noticias)
impeachment_titulo
## separando por ano de eleicao
# intervalo de confianca de quantidade de noticias por mes
n_noticias_mes_ano_eleicao <- noticias %>% group_by(ano, mes, is_ano_eleicao, subFonte) %>% summarise(numero = n())
ic_noticias_mes_eleicao <- n_noticias_mes_ano_eleicao %>% group_by(mes, is_ano_eleicao, subFonte) %>%
summarise(media = mean(numero), erro = qt(0.975,df=n()-1)*sd(numero)/sqrt(n()))
ggplot(ic_noticias_mes_eleicao) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-erro, ymax=media+erro, color=is_ano_eleicao), position = position_dodge(width = 0.5)) + facet_wrap(~mes)
bind_rows(media_noticias_dia, total_noticias_dia, impeachment_titulo)
rbind(media_noticias_dia, total_noticias_dia, impeachment_titulo)
cbind(media_noticias_dia, total_noticias_dia, impeachment_titulo)
data.table(cbind(media_noticias_dia, total_noticias_dia, impeachment_titulo))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate(method="spearman")
datatable(correlacao_n_noticias_portal, options = list(paging=F,info=F,searching=F))
dados_dia_impeachment <- cbind(media_noticias_dia, total_noticias_dia, impeachment_titulo)
datatable(dados_dia_impeachment, options = list(paging=F,info=F,searching=F))
install.packages("plotluck")
source("mongo_utils.R")
library(corrr)
library(DT)
library(tm)
library(wordcloud2)
library(readr)
library(stringr)
require(cowplot)
library(plotluck)
noticias <- get_todas_noticias()
n_palavras <- noticias %>% select(conteudo) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_count(" ")+1
noticias <- cbind(noticias, n_palavras)
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
noticias_folha_zelotes <- noticias_tema(noticias_folha, "zelotes", "titulo")
metricas_noticias_tema <- function(data, pattern, secao, subfonte){
noticias <- noticias_tema(data, pattern, secao)
media_palavras <- noticias %>% select(n_palavras) %>% colMeans()
if(is.nan(media_palavras)){
n_noticias <- 0
media_palavras <- 0
} else {
n_noticias <- nrow(noticias)
}
return(list(n_noticias = n_noticias, media_palavras = media_palavras,
secao = secao, subfonte = subfonte, busca = pattern))
}
gera_tabela_frequencias <- function(texto){
texto <- Corpus(VectorSource(texto))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
dtm <- TermDocumentMatrix(texto)
matriz <- as.matrix(dtm)
vector <- sort(rowSums(matriz),decreasing=TRUE)
data <- data.frame(word = names(vector),freq=vector)
return(data)
}
noticias_tema <- function(data, pattern, secao){
true_false_vector <- data %>% select(secao) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_detect(pattern)
noticias <- data %>% filter(true_false_vector == TRUE)
return(noticias)
}
noticias_folha_zelotes <- noticias_tema(noticias_folha, "zelotes", "titulo")
rubens_valente <- metricas_noticias_tema(noticias_folha_zelotes, "rubens valente", "emissor", "folha")
aguirre_talento <- metricas_noticias_tema(noticias_folha_zelotes, "aguirre talento", "emissor", "folha")
bela_megale <- metricas_noticias_tema(noticias_folha_zelotes, "bela megale", "emissor", "folha")
catia_seabra <- metricas_noticias_tema(noticias_folha_zelotes, "catia seabra", "emissor", "folha")
gabriel_mascarenhas <- metricas_noticias_tema(noticias_folha_zelotes, "gabriel mascarenhas", "emissor", "folha")
marcio_falcao <- metricas_noticias_tema(noticias_folha_zelotes, "márcio falcão", "emissor", "folha")
eduardo_cucolo <- metricas_noticias_tema(noticias_folha_zelotes, "eduardo cucolo", "emissor", "folha")
flavio_ferreira <- metricas_noticias_tema(noticias_folha_zelotes, "flávio ferreira", "emissor", "folha")
catia_seabra <- metricas_noticias_tema(noticias_folha_zelotes, "catia seabra", "emissor", "folha")
monica_bergamo <- metricas_noticias_tema(noticias_folha_zelotes, "mônica bergamo", "emissor", "folha")
marina_dias <- metricas_noticias_tema(noticias_folha_zelotes, "marina dias", "emissor", "folha")
leticia_casado <- metricas_noticias_tema(noticias_folha_zelotes, "letícia casado", "emissor", "folha")
natuza_nery <- metricas_noticias_tema(noticias_folha_zelotes, "natuza nery", "emissor", "folha")
match_emissores <- list(rubens_valente, aguirre_talento, bela_megale, catia_seabra, gabriel_mascarenhas, marcio_falcao, eduardo_cucolo, flavio_ferreira, catia_seabra, monica_bergamo, marina_dias, leticia_casado, natuza_nery)
match_emissores <- data.table::rbindlist(match_emissores)
match_emissores %>% plotluck(busca ~ n_noticias + media_palavras)
natuza_nery
leticia_casado
marina_dias
monica_bergamo
catia_seabra
flavio_ferreira
eduardo_cucolo
marcio_falcao
rubens_valente
eduardo_cucolo
marcio_falcao
gabriel_mascarenhas
catia_seabra
bela_megale
aguirre_talento
rubens_valente
match_emissores %>% ggplot(aes(n_noticias, media_palavras)) + geom_point()
View(match_emissores)
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = busca)) + geom_point()
natuza_nery
leticia_casado
marina_dias
View(match_emissores)
?mutate
match_emissores %>% mutate_if(funs(ifelse(n_noticias==1, busca="outros",busca)))
match_emissores %>% mutate_if(funs(ifelse(n_noticias==1, busca="outros",.)))
match_emissores %>% mutate_if(funs(ifelse(n_noticias==1, busca=="outros", .)))
match_emissores %>% mutate_if(., funs(ifelse(n_noticias==1, busca=="outros", .)))
match_emissores %>% mutate_if(funs(ifelse(.$n_noticias==1, .$busca=="outros", .$busca)))
with(match_emissores, ifelse(n_noticias==1, busca="outros", busca))
with(match_emissores, ifelse(n_noticias==1, busca=="outros", busca))
?ifelse
with(match_emissores, ifelse(n_noticias==1, busca="outros", busca))
match_emissor$busca <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
match_emissores$busca <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
View(match_emissores)
a <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
a
match_emissores$emissores <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
View(match_emissores)
match_emissores <- list(rubens_valente, aguirre_talento, bela_megale, catia_seabra, gabriel_mascarenhas, marcio_falcao, eduardo_cucolo, flavio_ferreira, catia_seabra, monica_bergamo, marina_dias, leticia_casado, natuza_nery)
match_emissores <- data.table::rbindlist(match_emissores)
match_emissores$emissores <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
View(match_emissores)
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = busca)) + geom_point()
match_emissores <- list(rubens_valente, aguirre_talento, bela_megale, catia_seabra, gabriel_mascarenhas, marcio_falcao, eduardo_cucolo, flavio_ferreira, catia_seabra, monica_bergamo, marina_dias, leticia_casado, natuza_nery)
match_emissores <- data.table::rbindlist(match_emissores)
match_emissores$emissor <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = emissor)) + geom_point()
View(match_emissores)
match_emissores %>% select(media_palavras, n_noticias, busca)
match_emissores <- match_emissores %>% select(media_palavras, n_noticias, busca)
View(match_emissores)
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = emissor)) + geom_point()
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = emissor)) + geom_point()
match_emissores <- list(rubens_valente, aguirre_talento, bela_megale, catia_seabra, gabriel_mascarenhas, marcio_falcao, eduardo_cucolo, flavio_ferreira, catia_seabra, monica_bergamo, marina_dias, leticia_casado, natuza_nery)
match_emissores <- data.table::rbindlist(match_emissores)
match_emissores$emissor <- with(match_emissores, ifelse(n_noticias==1, "outros", busca))
match_emissores %>% ggplot(aes(n_noticias, media_palavras, color = emissor)) + geom_point()
View(noticias_folha_zelotes)
