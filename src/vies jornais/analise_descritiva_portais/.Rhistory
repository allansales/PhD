folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
a<-filter(noticias, subFonte=="ESTADAO") %>% table(data)
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
a<-filter(noticias, subFonte=="ESTADAO") %>% table(data)
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
a<-filter(noticias, subFonte=="ESTADAO") %>% table(data)
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
ggplot(noticias) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
summary(noticias)
media_mes <- noticias %>% group_by(mes) %>% summarise(media = n()/7) #numero de anos ate agora
View(media_mes)
media_mes <- noticias %>% group_by(mes, subFonte) %>% summarise(media = n()/7) #numero de anos ate agora
View(media_mes)
View(media_mes)
noticias_mes <- noticias %>% group_by(mes, subFonte) %>% summarise(numero = n())
View(noticias_mes)
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean())
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), sd = sd(numero))
?sd
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero))
sd(noticias_mes$numero)
noticias_mes %>% group_by(mes, subFonte) %>% summarise(dp = sd(numero), media = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(dp = sd(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = sd(numero)), media2 = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = sd(numero)), media2 = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = sd(numero)), media2 = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero), sd = sd(numero)))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero), sd = sd(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero), media = sd(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero), media = mean(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media2 = mean(numero), media = sd(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), media = median(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), mediana = median(numero))
View(noticias_mes)
noticias_mes <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
View(noticias_mes)
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), mediana = median(numero), dp = sd(numero))
noticias_mes %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# geral
summary(noticias)
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
# media de noticias por mes
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
noticias_mes
View(noticias_mes)
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
View(noticias_mes)
df <- data.frame(grp = c("A", "B"), fit = 4:5, se = 1:2)
df
k <- ggplot(df, aes(grp, fit, ymin = fit-se, ymax = fit+se)
)
k+ geom_pointrange()
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, xmedia=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, xmax=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(ano)
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(mes)
View(noticias_mes)
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(mes)
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(~mes)
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# geral
summary(noticias)
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
# media de noticias por mes
## melhor solucao eh uma linha da figura para cada portal. cada mes de cada portal eh representado por uma barra e a barra tem uma linha representando o desvio padrao.
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(~mes)
setwd("~/workspace/PhD/src/analise_descritiva_portais")
source("mongo_utils.R")
library("stringr")
noticias <- get_todas_noticias()
str_detect(noticias[1,"conteudo"],c("[Ll]ava","[Jj]ato"))
2750*142798
noticias_sample <- sample_n(noticias, 100)
View(noticias_sample)
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_length()
noticias_sample %>% select(conteudo) %>% rowwise() %>% print()
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_detect(noticias[1,"conteudo"],c("[Ll]ava","[Jj]ato"))
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_detect(c("[Ll]ava","[Jj]ato"))
?rowwise
noticias_sample %>% select(conteudo) %>% rowwise() %>% do(str_detect(c("[Ll]ava","[Jj]ato")))
pattern <- c("[Ll]ava","[Jj]ato")
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_detect(pattern)
noticias_sample %>% select(conteudo)
noticias_sample %>% select(conteudo) %>% str_detect(pattern)
noticias_sample %>% select(conteudo) %>% mutate(a=str_detect(pattern))
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(pattern))
pattern <- c("[Ll]ava","[Jj]ato")
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(pattern))
ptrn <- c("[Ll]ava","[Jj]ato")
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise()
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(pattern=ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(c("[Ll]ava","[Jj]ato")))
noticias_sample %>% select(conteudo) %>% rowwise() %>% summarise(a=str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% summarise(str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_detect(ptrn)
noticias_sample %>% select(conteudo) %>% rowwise() %>% str_detect(ptrn)
noticias_sample %>% select(conteudo) %>% rowwise() %>% summarise(a=str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% mutate(a=str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% do(str_detect(ptrn))
noticias_sample %>% select(conteudo) %>% rowwise() %>% do(str_detect(ptrn)) %>% rbind_all()
ptrn <- c("[Ll]ava","[Jj]ato")
noticias_sample %>% select(conteudo) %>% rowwise() %>% do(str_detect(ptrn)) %>% rbind_all()
apply(noticias_sample, 1, str_detect, ptrn)
warnings()
?str_detect
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
row_contain_word(noticias_sample$conteudo[1],ptrn)
noticias_sample$conteudo[1]
ptrn <- c("[Ll]ava","[Jj]ato", "Dilma")
row_contain_word(noticias_sample$conteudo[1],ptrn)
apply(noticias_sample, 1, row_contain_word, ptrn)
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
a
ptrn <- c("[Ll]ava","[Jj]ato", "Dilma","Aécio","José Serra","Lula")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("[Ll]ava","[Jj]ato", "Dilma","Aécio")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("[Ll]ava","[Jj]ato", "Dilma","José Serra")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
warnings()
ptrn <- c("[Ll]ava","[Jj]ato", "Dilma","Aécio")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("[Ll]ava","[Jj]ato","Aécio")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("[Ll]ava","[Jj]ato","Aécio","Dilma")
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("[Ll]ava","[Jj]ato","Aécio")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
row_contain_word <- function(x, ptrn){
print(ptrn)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("Lava","Jato","Aécio")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
print(ptrn)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("Lava","Jato","Aécio","Dilma")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
print(ptrn)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("Lava","Jato","Aécio","Dilma","Temer")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
print(ptrn)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
ptrn <- c("Lava","Jato")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
print(ptrn)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
row_contain_word <- function(x, ptrn){
print(x)
contain <- str_detect(x, ptrn)
print(contain)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample, 1, row_contain_word, ptrn)
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-apply(noticias_sample$conteudo, 1, row_contain_word, ptrn)
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-lapply(noticias_sample$conteudo, row_contain_word, ptrn)
a
ptrn <- c("Lava","Jato","Aécio","Dilma","Temer","Lula")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-lapply(noticias_sample$conteudo, row_contain_word, ptrn)
a
ptrn <- c("Lava","Jato","Aécio","Dilma","Temer","Lula","Eduardo Cunha","Fachin","Moro")
noticias_sample %>% select(conteudo) %>% rowwise()
row_contain_word <- function(x, ptrn){
contain <- str_detect(x, ptrn)
if (TRUE %in% contain){
return(TRUE)
}
return(FALSE)
}
a<-lapply(noticias_sample$conteudo, row_contain_word, ptrn)
a
n<-lapply(noticias_sample$titulo, row_contain_word, ptrn)
unlist(n)
table(unlist(n))
ptrn_list <- c("Lava Jato","Aécio","Dilma","Temer","Lula","Eduardo Cunha","Fachin","Moro")
for(ptrn in ptrn_list){
n <- lapply(noticias_sample$titulo, row_contain_word, ptrn)
table(unlist(n))
}
for(ptrn in ptrn_list){
n <- lapply(noticias_sample$titulo, row_contain_word, ptrn)
print(table(unlist(n)))
}
for(ptrn in ptrn_list){
n <- lapply(noticias$titulo, row_contain_word, ptrn)
print(table(unlist(n)))
}
for(ptrn in ptrn_list){
n <- lapply(noticias$conteudo, row_contain_word, ptrn)
print(table(unlist(n)))
}
source("mongo_utils.R")
library(tm)
library(wordcloud2)
library(readr)
noticias_estadao <- get_collection("estadaoNoticias")
noticias_folha <- get_collection("folhaNoticias")
conteudo_estadao <- select(noticias_estadao, conteudo)
conteudo_folha <- select(noticias_folha, conteudo)
titulo_estadao <- select(noticias_estadao, titulo)
titulo_folha <- select(noticias_folha, titulo)
gera_tabela_frequencias <- function(texto){
texto <- Corpus(VectorSource(texto))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
dtm <- TermDocumentMatrix(texto)
matriz <- as.matrix(dtm)
vector <- sort(rowSums(matriz),decreasing=TRUE)
data <- data.frame(word = names(vector),freq=vector)
return(data)
}
tf_titulo_estadao <- gera_tabela_frequencias(titulo_estadao)
tf_titulo_folha <- gera_tabela_frequencias(titulo_folha)
wordcloud2(head(tf_titulo_estadao,100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
wordcloud2(head(tf_titulo_folha,100),  fontFamily = 'Segoe UI', size = 1, color = "random-light")
View(titulo_estadao)
View(titulo_folha)
View(tf_titulo_estadao)
View(tf_titulo_folha)
