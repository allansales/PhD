library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# geral
summary(noticias)
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
# media de noticias por mes
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
noticias_mes
View(noticias_mes)
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
View(noticias_mes)
df <- data.frame(grp = c("A", "B"), fit = 4:5, se = 1:2)
df
k <- ggplot(df, aes(grp, fit, ymin = fit-se, ymax = fit+se)
)
k+ geom_pointrange()
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, xmedia=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, xmax=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(ano)
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(mes)
View(noticias_mes)
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(mes)
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(~mes)
library(dplyr)
library(ggplot2)
library(mongolite)
library(anytime)
library(corrr)
library(lubridate)
get_data <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
g1_noticias <- get_data("g1Noticias")
#g1_comentarios <- get_data("g1Comentarios")
folha_noticias <- get_data("folhaNoticias")
# folha_comentarios <- get_data("folhaComentarios")
estadao_noticias <- get_data("estadaoNoticias")
# estadao_comentarios <- get_data("estadaoComentarios")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data))
# geral
summary(noticias)
## descricao noticias
# numero de noticias por ano
ggplot(noticias) + geom_bar(aes(x=ano))
# numero de noticias por ano x portal
ggplot(noticias) + geom_bar(aes(x=ano, fill=subFonte), position = "dodge")
# numero de noticias por mes x ano por portal
ggplot(noticias) + geom_bar(aes(x=mes, fill=subFonte), position = "dodge") + facet_wrap(~ano)
# numero de noticias por dia x mes x ano por portal
ggplot(noticias) + geom_bar(mapping = aes(x=dia, group=subFonte, color=subFonte), position = "dodge") + facet_grid(ano ~ mes)
ggplot(noticias) + geom_density(mapping = aes(x = data, ..count.., group=subFonte, color = subFonte))
# correlacao das noticias por dia
correlacao_n_noticias_portal <- noticias %>%
select(data, subFonte) %>%
table() %>%
correlate()
# repercussao por dia x mes x ano por portal
repercussao_dia <- noticias %>% mutate(ano = year(data), mes = month(data), dia = day(data), dia_do_ano = yday(data)) %>%
group_by(ano, mes, dia, subFonte) %>%
summarise(n_comentarios = sum(repercussao))
ggplot(repercussao_dia) + geom_jitter(mapping = aes(x=dia, y=n_comentarios, group=subFonte, color=subFonte)) + facet_grid(ano ~ mes)
# media de noticias por mes
## melhor solucao eh uma linha da figura para cada portal. cada mes de cada portal eh representado por uma barra e a barra tem uma linha representando o desvio padrao.
n_noticias_mes_ano <- noticias %>% group_by(ano, mes, subFonte) %>% summarise(numero = n())
noticias_mes <- n_noticias_mes_ano %>% group_by(mes, subFonte) %>% summarise(media = mean(numero), dp = sd(numero), mediana = median(numero))
ggplot(noticias_mes) + geom_pointrange(mapping = aes(subFonte, media, ymin=media-dp, ymax=media+dp)) + facet_wrap(~mes)
source("mongo_utils.R")
library(readr)
library(stringr)
library(tm)
library(wordVectors)
noticias <- get_todas_noticias()
n_palavras <- noticias %>% select(conteudo) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_count(" ")+1
noticias <- cbind(noticias, n_palavras)
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
# cria arquivo com todas as noticias
build_corpus <- function(conteudo, infile){
texto <- Corpus(VectorSource(conteudo))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
tm::writeCorpus(texto, filenames = c(infile, "trash.txt"))
file.remove("trash.txt")
}
build_word_vectors <- function(conteudo, infile, outfile){
build_corpus(conteudo, infile)
if(file.exists(estadao_outfile)){
file.remove(outfile)
}
model = train_word2vec(infile, outfile, vectors=300, threads=4, window=12, iter=5, negative_samples=0)
return(model)
}
estadao_conteudo_ <- noticias_estadao %>% filter(day=1, ano==2014, mes==12) %>%select(conteudo)
setwd("~/workspace/PhD/src/vies jornais/analise_descritiva_portais/utils")
source("mongo_utils.R")
library(readr)
library(stringr)
library(tm)
library(wordVectors)
noticias <- get_todas_noticias()
n_palavras <- noticias %>% select(conteudo) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_count(" ")+1
noticias <- cbind(noticias, n_palavras)
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
# cria arquivo com todas as noticias
build_corpus <- function(conteudo, infile){
texto <- Corpus(VectorSource(conteudo))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
tm::writeCorpus(texto, filenames = c(infile, "trash.txt"))
file.remove("trash.txt")
}
build_word_vectors <- function(conteudo, infile, outfile){
build_corpus(conteudo, infile)
if(file.exists(estadao_outfile)){
file.remove(outfile)
}
model = train_word2vec(infile, outfile, vectors=300, threads=4, window=12, iter=5, negative_samples=0)
return(model)
}
estadao_conteudo_ <- noticias_estadao %>% filter(day=1, ano==2014, mes==12) %>%select(conteudo)
estadao_conteudo_ <- noticias_estadao %>% filter(dia==1, ano==2014, mes==12) %>%select(conteudo)
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes==12) %>%select(conteudo)
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
estadao_infile <- "a_estadao_words.txt"
estadao_outfile <- "a_estadao_vectors.bin"
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014) %>%select(conteudo)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes==11) %>%select(conteudo)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mÃªs==12) %>%select(conteudo)
View(noticias_estadao)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes==10) %>%select(conteudo)
View(noticias_estadao)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes=="Nov") %>%select(conteudo)
estadao_infile <- "a_estadao_words.txt"
estadao_outfile <- "a_estadao_vectors.bin"
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
# cria arquivo com todas as noticias
build_corpus <- function(conteudo, infile){
texto <- Corpus(VectorSource(conteudo))
texto <- tm_map(texto, tolower)
texto <- tm_map(texto, removePunctuation, preserve_intra_word_dashes = TRUE)
texto <- tm_map(texto, removeWords, stopwords("pt"))
texto <- tm_map(texto, removeNumbers)
texto <- tm_map(texto, stripWhitespace)
texto <- tm_map(texto, stemDocument)
texto <- tm_map(texto, PlainTextDocument)
tm::writeCorpus(texto, filenames = c(infile, "trash.txt"))
file.remove("trash.txt")
}
build_word_vectors <- function(conteudo, infile, outfile){
build_corpus(conteudo, infile)
if(file.exists(outfile)){
file.remove(outfile)
}
model = train_word2vec(infile, outfile, vectors=300, threads=4, window=12, iter=5, negative_samples=0)
return(model)
}
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes=="Nov") %>%select(conteudo)
estadao_infile <- "a_estadao_words.txt"
estadao_outfile <- "a_estadao_vectors.bin"
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
estadao_conteudo <- noticias_estadao %>% filter(dia==1, ano==2014, mes=="Nov") %>%select(conteudo)
estadao_infile <- "a_estadao_words.txt"
estadao_outfile <- "v_estadao_vectors.bin"
vectors_estadao <- build_word_vectors(estadao_conteudo, estadao_infile, estadao_outfile)
knitr::opts_chunk$set(echo = F)
source("generate_word_vectors.R")
source("utils.R")
noticias_estadao_processadas <- processa_palavras(noticias_estadao)
processa_palavras <- function(base){
noticias_processadas <- base  %>%
group_by(url) %>%
summarise(conteudo_processado = build_corpus(conteudo))
noticias_tema <- inner_join(base, noticias_processadas, by = "url")
return(noticias_tema)
}
noticias_estadao_processadas <- processa_palavras(noticias_estadao)
noticias_folha_processadas <- processa_palavras(noticias_folha)
View(noticias_folha_processadas)
write_csv(noticias_estadao, "noticias_estadao.csv")
write_csv(noticias_estadao_processadas, "noticias_estadao.csv")
write_csv(noticias_folha_processadas, "noticias_folha.csv")
js <- '[
{
"id": 1,
"val": "a"
},
{
"id": 2,
"val": "b"
},
{
"id": 3,
"val": "c"
}
] '
#library(jsonlite)
library(mongolite)
mongo <- mongo(collection = "test", db = "stocks", url = "mongodb://localhost",
verbose = TRUE)
mongo$insert(fromJSON(js))
library(jsonlite)
a<-fromJSON(js)
View(a)
mongo$insert()
mongo$insert(a)
source("mongo_utils.R")
insert_in_database <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$insert(colecao)
rm(con)
}
insert_in_database <- function(colecao, nome){
con <- mongo(db = "stocks", collection = nome, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
con$insert(colecao)
rm(con)
}
noticias_estadao <- processa_palavras(noticias_estadao)
knitr::opts_chunk$set(echo = F)
source("generate_word_vectors.R")
source("utils.R")
source("mongo_utils.R")
processa_palavras <- function(base){
noticias_processadas <- base  %>%
group_by(url) %>%
summarise(conteudo_processado = build_corpus(conteudo))
noticias_tema <- inner_join(base, noticias_processadas, by = "url")
return(noticias_tema)
}
noticias_estadao <- processa_palavras(noticias_estadao)
noticias_folha <- processa_palavras(noticias_folha)
insert_in_database(noticias_estadao, "noticias_estadao_processadas")
insert_in_database(noticias_folha, "noticias_folha_processadas")
insert_in_database(noticias_estadao, "noticiasEstadaoProcessadas")
insert_in_database(noticias_estadao, "noticiasEstadaoProcessadas")
insert_in_database(noticias_folha, "noticiasFolhaProcessadas")
setwd("~/workspace/PhD/src/vies jornais/analise_descritiva_portais/utils")
knitr::opts_chunk$set(echo = F)
source("utils.R")
source("mongo_utils.R")
noticias <- get_collection("estadaoNoticiasProcessadas") %>% filter(timestamp >= "2014-01-01" & timestamp <= "2014-12-31")
noticias <- get_collection("estadaoNoticiasProcessadas") %>% filter(timestamp >= "2014-01-01" & timestamp <= "2014-12-31")
View(noticias)
info()
mongolite::info()
mongo_options()
mongo()
mongo()$info
mongo()$info()
a<-mongo()$info()
rm(a)
?starts_with()
starts_with("ae","ae")
str_detect("estadaoNoticias","estadao")
str_detect("estadao","estadaoNoticias")
str_detect("estadaoNoticias","estadao")
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
colecao
colecao = "estadaoNoticiasProcessadas"
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
comentarios_collection
colecao = "folhaNoticiasProcessadas"
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
comentarios_collection
colecao = "estadaoNoticiasProcessadas"
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
comentarios_collection
colecao = "estadaoNoticiasProcessadas"
data_inicio = "2014-01-01"
data_fim = "2014-12-31"
noticias <- get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios <- get_collection(comentarios_collection)
View(comentarios)
?inner_join
View(comentarios)
comentarios_data <- comentarios %>% filter(idNoticia %in% noticias$idNoticia)
View(comentarios_data)
noticias$idNoticia
distinct(noticias$idNoticia)
unique(noticias$idNoticia)
View(noticias)
colecao = "folhaNoticiasProcessadas"
data_inicio = "2014-01-01"
data_fim = "2014-12-31"
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
noticias <- get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
View(noticias)
comentarios <- get_collection(comentarios_collection)
comentarios_data <- comentarios %>% filter(idNoticia %in% noticias$idNoticia)
View(comentarios_data)
sum(noticias$repercussao)
get_comentarios_por_data <- function(colecao, data_inicio, data_fim){
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
noticias <- get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios <- get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
return(comentarios)
}
a <- get_comentarios_por_data("folhaComentarios", "2014-01-01","2014-01-30")
if(str_detect(colecao,"estadao")){
comentarios_collection <- "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection <- "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection <- "g1Comentarios"
}
comentarios_collection
noticias <- get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios = get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
get_comentarios_por_data <- function(colecao, data_inicio, data_fim){
if(str_detect(colecao,"estadao")){
comentarios_collection = "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection = "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection = "g1Comentarios"
}
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios = get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
return(comentarios)
}
a <- get_comentarios_por_data("folhaComentarios", "2014-01-01","2014-01-30")
data_inicio = "2014-01-01"
data_fim = "2014-01-30"
colecao = "folhaComentarios"
if(str_detect(colecao,"estadao")){
comentarios_collection = "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection = "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection = "g1Comentarios"
}
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios = get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
library(mongolite)
library(tm)
library(dplyr)
library(ggplot2)
library(stringr)
library(lubridate)
library(anytime)
get_collection <- function(colecao){
con <- mongo(db = "stocks", collection = colecao, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
data <- con$find()
rm(con)
return(data)
}
get_todas_noticias_originais <- function(){
g1_noticias <- get_collection("g1Noticias")
folha_noticias <- get_collection("folhaNoticias")
estadao_noticias <- get_collection("estadaoNoticias")
noticias <- bind_rows(g1_noticias, folha_noticias, estadao_noticias)
anos_eleicao <- c(2010,2012,2014,2016)
noticias <- noticias %>% mutate(data = utcdate(timestamp), repercussao = as.integer(repercussao),
ano = year(data), mes = month(data, label=T, abbr=T), dia = day(data), dia_do_ano = yday(data),
is_ano_eleicao = if_else(ano %in% anos_eleicao, TRUE, FALSE))
n_palavras <- noticias %>% select(conteudo) %>%
unlist() %>% as.vector() %>%
tolower() %>% str_count(" ")+1
noticias <- cbind(noticias, n_palavras)
return(noticias)
}
get_todas_noticias_processadas <- function(){
folha_noticias <- get_collection("folhaNoticiasProcessadas")
estadao_noticias <- get_collection("estadaoNoticiasProcessadas")
g1_noticias <- get_collection("g1NoticiasProcessadas")
noticias <- bind_rows(folha_noticias, estadao_noticias, g1_noticias)
return(noticias)
}
get_todos_comentarios <- function(){
g1_comentarios <- get_collection("g1Comentarios")
folha_comentarios <- get_collection("folhaComentarios")
estadao_comentarios <- get_collection("estadaoComentarios")
comentarios <- bind_rows(g1_comentarios, folha_comentarios, estadao_comentarios)
return(comentarios)
}
get_comentarios_por_data <- function(colecao, data_inicio, data_fim){
if(str_detect(colecao,"estadao")){
comentarios_collection = "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection = "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection = "g1Comentarios"
}
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios = get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
return(comentarios)
}
insert_in_database <- function(colecao, nome){
con <- mongo(db = "stocks", collection = nome, url = "mongodb://localhost", verbose = FALSE, options = ssl_options())
con$insert(colecao)
rm(con)
}
data_inicio = "2014-01-01"
data_fim = "2014-01-30"
colecao = "folhaComentarios"
a <- get_comentarios_por_data("folhaComentarios", "2014-01-01","2014-01-30")
colecao = "folhaNoticias"
a <- get_comentarios_por_data(colecao, data_inicio, data_fim)
if(str_detect(colecao,"estadao")){
comentarios_collection = "estadaoComentarios"
} else if(str_detect(colecao,"folha")){
comentarios_collection = "folhaComentarios"
} else if(str_detect(colecao,"g1")){
comentarios_collection = "g1Comentarios"
}
comentarios_collection
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
data_inicio
data_fim
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
colecao = "folhaNoticiasProcessadas"
noticias = get_collection(colecao) %>% filter(timestamp >= data_inicio & timestamp <= data_fim)
comentarios = get_collection(comentarios_collection) %>% filter(idNoticia %in% noticias$idNoticia)
View(comentarios)
a <- get_comentarios_por_data(colecao, data_inicio, data_fim)
View(a)
