palavras_usadas <- palavras_freq %>% .$eleicao_tm %>% as.character()
vetores_entidade_estadao <- modelo[[palavras_usadas, average=F]]
normaliza_vetor <- function(vetor_palavra){
norma <- vetor_palavra %>% pracma::Norm()
vetor_normalizado <- vetor_palavra/norma
return(vetor_normalizado)
}
palavras_normalizadas <- vetores_entidade_estadao@.Data %>% apply(1,normaliza_vetor) %>% t()
calcula_proximidade <- function(modelo, palavra_1, palavra_2){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
embed_1 <- modelo[[palavra_1]]
embed_2 <- modelo[[palavra_2]]
dif_norma <- (embed_1 - embed_2) %>% pracma::Norm()
return(dif_norma)
}
knitr::opts_chunk$set(echo = TRUE)
source("../utils/mongo_utils.R")
source("../utils/utils.R")
library("wordVectors")
library("readr")
library("rword2vec")
noticias <- get_todas_noticias_processadas()
noticias <- get_todas_noticias_processadas()
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina","genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
noticias_estadao_tema <- noticias_estadao %>% filter(timestamp >= "2014-05-30", ano == 2014) %>% noticias_tema(pattern, "titulo")
tema = "eleicoes_2014"
train_file <- paste(tema,".csv",sep="")
binary_file <- paste(tema,".bin",sep="")
n.layers = 300
noticias_estadao_tema %>% select(conteudo_processado) %>% write_csv(train_file)
#modelo <- train_word2vec(train_file, threads = 4, vectors = n.layers)
modelo <- read.binary.vectors(binary_file)
word_analogy(file_name = binary_file, search_words = "pt psdb petista")
word_analogy(file_name = binary_file, search_words = "dilma aécio rousseff")
word_analogy(file_name = binary_file, search_words = "dilma aécio petista")
word_analogy(file_name = binary_file, search_words = "pt psdb dilma")
word_analogy(file_name = binary_file, search_words = "campos psb aécio")
word_analogy(file_name = binary_file, search_words = "marina psb aécio")
word_analogy(file_name = binary_file, search_words = "aécio psdb eymael")
word_analogy(file_name = binary_file, search_words = "dilma pt eymael")
word_analogy(file_name = binary_file, search_words = "dilma pt fidelix")
word_analogy(file_name = binary_file, search_words = "genro psol fidelix")
word_analogy(file_name = binary_file, search_words = "fidelix prtb jorge")
path_modelo_tsv = paste(tema,".tsv",sep="")
modelo@.Data %>% as.data.frame() %>% write_tsv(path_modelo_tsv)
path_modelo_names_tsv = paste(tema,"_names",".tsv",sep="")
modelo@.Data %>% rownames() %>% as.data.frame() %>% write_tsv(path_modelo_names_tsv)
## filtra palavras a partir de criterio
path = paste("./",train_file,sep="")
eleicao_tm <- scan(path, what = "character")
threshold <- 50
palavras_freq <- table(eleicao_tm) %>% data.frame() %>% filter(Freq >= threshold)
palavras_usadas <- palavras_freq %>% .$eleicao_tm %>% as.character()
vetores_entidade_estadao <- modelo[[palavras_usadas, average=F]]
path_par_palavras = paste("saida_distancia_partidos/par_palavras_",tema,".csv",sep="")
normaliza_vetor <- function(vetor_palavra){
norma <- vetor_palavra %>% pracma::Norm()
vetor_normalizado <- vetor_palavra/norma
return(vetor_normalizado)
}
palavras_normalizadas <- vetores_entidade_estadao@.Data %>% apply(1,normaliza_vetor) %>% t()
# calcula a norma da diferença entre duas palavras
calcula_proximidade <- function(modelo, palavra_1, palavra_2){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
embed_1 <- modelo[[palavra_1]]
embed_2 <- modelo[[palavra_2]]
dif_norma <- (embed_1 - embed_2) %>% pracma::Norm()
return(dif_norma)
}
path_par_palavras
par_palavras <- read_csv(path_par_palavras)
path_proximidade_par_palavras = paste("saida_distancia_partidos/proximidade_palavras_",tema,".csv",sep="")
path_proximidade_par_palavras
proximidade_par_palavras <- read_csv("saida_distancia_partidos/proximidade_palavras_norm.csv")
proximidade_par_palavras <- read_csv(path_proximidade_par_palavras)
tema = "eleicoes_2014_jun"
train_file <- paste(tema,".csv",sep="")
binary_file <- paste(tema,".bin",sep="")
n.layers = 300
noticias_estadao_tema %>% select(conteudo_processado) %>% write_csv(train_file)
modelo <- read.binary.vectors(binary_file)
word_analogy(file_name = binary_file, search_words = "pt psdb petista")
word_analogy(file_name = binary_file, search_words = "dilma aécio rousseff")
word_analogy(file_name = binary_file, search_words = "dilma aécio petista")
word_analogy(file_name = binary_file, search_words = "pt psdb dilma")
word_analogy(file_name = binary_file, search_words = "campos psb aécio")
word_analogy(file_name = binary_file, search_words = "marina psb aécio")
word_analogy(file_name = binary_file, search_words = "aécio psdb eymael")
word_analogy(file_name = binary_file, search_words = "dilma pt eymael")
word_analogy(file_name = binary_file, search_words = "dilma pt fidelix")
word_analogy(file_name = binary_file, search_words = "genro psol fidelix")
word_analogy(file_name = binary_file, search_words = "fidelix prtb jorge")
path_modelo_tsv = paste(tema,".tsv",sep="")
modelo@.Data %>% as.data.frame() %>% write_tsv(path_modelo_tsv)
path_modelo_names_tsv = paste(tema,"_names",".tsv",sep="")
modelo@.Data %>% rownames() %>% as.data.frame() %>% write_tsv(path_modelo_names_tsv)
## filtra palavras a partir de criterio
path = paste("./",train_file,sep="")
eleicao_tm <- scan(path, what = "character")
threshold <- 50
palavras_freq <- table(eleicao_tm) %>% data.frame() %>% filter(Freq >= threshold)
palavras_usadas <- palavras_freq %>% .$eleicao_tm %>% as.character()
vetores_entidade_estadao <- modelo[[palavras_usadas, average=F]]
normaliza_vetor <- function(vetor_palavra){
norma <- vetor_palavra %>% pracma::Norm()
vetor_normalizado <- vetor_palavra/norma
return(vetor_normalizado)
}
palavras_normalizadas <- vetores_entidade_estadao@.Data %>% apply(1,normaliza_vetor) %>% t()
calcula_proximidade <- function(modelo, palavra_1, palavra_2){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
embed_1 <- modelo[[palavra_1]]
embed_2 <- modelo[[palavra_2]]
dif_norma <- (embed_1 - embed_2) %>% pracma::Norm()
return(dif_norma)
}
path_par_palavras = paste("saida_distancia_partidos/par_palavras_",tema,".csv",sep="")
path_par_palavras
par_palavras <- read_csv(path_par_palavras)
par_palavras <- read_csv(path_par_palavras)
path_proximidade_par_palavras = paste("saida_distancia_partidos/proximidade_palavras_",tema,".csv",sep="")
View(proximidade_par_palavras)
s_score <- function(palavra_1, palavra_2, referencia_1, referencia_2, word_embedding){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
x <- word_embedding[[palavra_1]]
y <- word_embedding[[palavra_2]]
a <- word_embedding[[referencia_1]]
b <- word_embedding[[referencia_2]]
cos <- cosineSimilarity(x-y, a-b)
}
similaridade_palavras <- proximidade_par_palavras %>% filter(palavra_1 %in% partidos && palavra_2 %in% partidos)
View(proximidade_par_palavras)
proximidade_par_palavras %>% filter(palavra_1 %in% partidos & palavra_2 %in% partidos)
similaridade_palavras <- proximidade_par_palavras %>% filter(palavra_1 %in% partidos & palavra_2 %in% partidos)
View(similaridade_palavras)
similaridade_palavras <- proximidade_par_palavras %>% filter(palavra_1 %in% partidos & palavra_2 %in% partidos) %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
inverso <- proximidade_par_palavras %>% data_frame(palavras_2, palavras_1)
View(proximidade_par_palavras)
inverso <- proximidade_par_palavras %>% data_frame(palavra_2, palavra_1)
inverso <- proximidade_par_palavras %>% select(palavra_2, palavra_1)
View(inverso)
View(proximidade_par_palavras)
inverso <- proximidade_par_palavras %>% select(palavra_2, palavra_1, prox)
a <- bind_cols(proximidade_par_palavras, inverso)
a <- bind_rows(proximidade_par_palavras, inverso)
View(a)
a <- rbind(proximidade_par_palavras, inverso)
View(a)
?bind
a <- combine(proximidade_par_palavras, inverso)
a <- bind_rows(proximidade_par_palavras, inverso)
View(a)
inverso <- proximidade_par_palavras %>% select(palavra_1 = palavra_2, palavra_2 = palavra_1, prox)
a <- bind_rows(proximidade_par_palavras, inverso)
View(a)
View(similaridade_palavras)
palavras_neutras <- proximidade_par_palavras %>% filter(palavra_1 %in% partidos & palavra_2 %in% partidos)
View(palavras_neutras)
proximidade_par_palavras <- bind_rows(proximidade_par_palavras, inverso)
palavras_neutras <- proximidade_par_palavras %>% filter(palavra_1 %in% partidos & palavra_2 %in% partidos)
View(palavras_neutras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
g <- modelo[["dilma"]] - modelo[["aécio"]]
partidos
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, c, tema_z_estadao)
direct_bias_words <- direct_bias_calculator(partidos, g, c, modelo)
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g)**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, c, modelo)
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g))
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, c, modelo)
c
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_words
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
View(direct_bias_words)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "fidelix", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "campos", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "campos", "aécio", modelo))
View(similaridade_palavras)
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "campos", "genro", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "campos", "genro", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "jorge", "fidelix", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "jorge", "genro", modelo))
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "eymael", "genro", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "eymael", "genro", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "eymael", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "eymael", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "aécio", "temer", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
palavras_neutras
partidos
a <- proximidade_par_palavras %>% filter(palavra_1 %in% "prtb" & palavra_2 %in% partidos)
a <- proximidade_par_palavras %>% filter(palavra_1 %in% "psdc" & palavra_2 %in% partidos)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
direct_bias_words
View(direct_bias_words)
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y)) +
geom_text()
View(direct_bias_words)
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
View(direct_bias_words_graphic)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "rousseff", "neves", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["rousseff"]] - modelo[["neves"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "rousseff", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "rousseff", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["rousseff"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
View(proximidade_par_palavras)
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "rousseff", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "rousseff", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["rousseff"]] - modelo[["aécio"]]
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
View(direct_bias_words)
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
#direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
#direct_bias_weights <- entities_bias %>% na.omit()
return(entities_bias)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
View(direct_bias_words)
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "pt", "psdb", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
View(direct_bias_value)
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
g <- modelo[["pt"]] - modelo[["psdb"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
g <- modelo[["dilma"]] - modelo[["aécio"]]
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_words
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "aécio", "dilma", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "aécio", "dilma", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["aécio"]] - modelo[["dilma"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_value
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "temer", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "temer", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["temer"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "marina", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
palavras_neutras <- proximidade_par_palavras %>% filter(palavra_1 %in% entity & palavra_2 %in% entity)
# calcula o cosseno entre a-b e x-y
s_score <- function(palavra_1, palavra_2, referencia_1, referencia_2, word_embedding){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
x <- word_embedding[[palavra_1]]
y <- word_embedding[[palavra_2]]
a <- word_embedding[[referencia_1]]
b <- word_embedding[[referencia_2]]
cos <- cosineSimilarity(x-y, a-b)
}
# limiar de 1 porque eh o cossendo de pi/3 (que implica da distancia entre as palavras serem menores entre si que entre elas e a origem)
limiar = 1 #%>% filter(prox <= limiar)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
# calcula o cosseno entre a-b e x-y
s_score <- function(palavra_1, palavra_2, referencia_1, referencia_2, word_embedding){
palavra_1 <- palavra_1 %>% as.character()
palavra_2 <- palavra_2 %>% as.character()
x <- word_embedding[[palavra_1]]
y <- word_embedding[[palavra_2]]
a <- word_embedding[[referencia_1]]
b <- word_embedding[[referencia_2]]
cos <- cosineSimilarity(x-y, a-b)
}
# limiar de 1 porque eh o cossendo de pi/3 (que implica da distancia entre as palavras serem menores entre si que entre elas e a origem)
limiar = 1 #%>% filter(prox <= limiar)
similaridade_palavras <- palavras_neutras %>% rowwise() %>% mutate(similaridade_cos = s_score(palavra_1, palavra_2, "dilma", "aécio", modelo))
similaridade_palavras <- similaridade_palavras %>% arrange(-similaridade_cos, prox)
View(similaridade_palavras)
g <- modelo[["dilma"]] - modelo[["aécio"]]
constant <- 1
direct_bias_calculator <- function(entities, g, c, word_embedding){
entities <- data_frame(entidade = entities)
entities_bias <- entities %>% rowwise() %>% mutate(cosine_c = cosineSimilarity(word_embedding[[entidade]], g) %>% .**c)
direct_bias_weights <- entities_bias %>% na.omit()
return(direct_bias_weights)
}
direct_bias_words <- direct_bias_calculator(partidos, g, constant, modelo)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
View(direct_bias_value)
direct_bias_words <- direct_bias_calculator(entity, g, constant, modelo)
View(direct_bias_words)
direct_bias_value <- direct_bias_words %>% summarise(valor = abs(cosine_c) %>% mean())
View(direct_bias_value)
direct_bias_words_graphic <- direct_bias_words %>% mutate(y = sample(-9:9, n(), replace = T))
direct_bias_words_graphic %>% ggplot(aes(x=cosine_c, y=y, label=entidade)) + geom_text()
