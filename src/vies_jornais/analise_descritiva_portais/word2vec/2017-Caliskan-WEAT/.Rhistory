summarise(cosine = cosDist_model(we_estadao_noticias, w, col)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, get("A"))
mean_w_B = mean_cosDist(w, get("B"))
return(mean_w_A - mean_w_B)
}
targets %>% group_by(col) %>% summarise(s_w = score_w(col, features, modelo)) %>% summarise(s = sum(s_w))
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(we_estadao_noticias, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, A)
mean_w_B = mean_cosDist(w, B)
return(mean_w_A - mean_w_B)
}
targets %>% group_by(get(col)) %>% summarise(s_w = score_w(col, features, modelo)) %>% summarise(s = sum(s_w))
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(we_estadao_noticias, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, A)
mean_w_B = mean_cosDist(w, B)
return(mean_w_A - mean_w_B)
}
targets %>% group_by(get(col)) %>% summarise(s_w = score_w(col, features, modelo)) %>% summarise(s = sum(s_w))
targets %>% group_by(X) %>% summarise(s_w = score_w(col, features, modelo)) %>% summarise(s = sum(s_w))
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(we_estadao_noticias, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
targets %>% group_by(X) %>% summarise(s_w = score_w(col, features, modelo)) %>% summarise(s = sum(s_w))
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(we_estadao_noticias, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
targets %>% group_by(X) %>% summarise(s_w = score_w(X, features, modelo)) %>% summarise(s = sum(s_w))
targets %>% group_by(get("X")) %>% summarise(s_w = score_w(X, features, modelo)) %>% summarise(s = sum(s_w))
targets %>% group_by(get("X")) %>% summarise(s_w = score_w(get("X"), features, modelo)) %>% summarise(s = sum(s_w))
targets %>% group_by(get(col)) %>% summarise(s_w = score_w(get(col), features, we_estadao_noticias)) %>% summarise(s = sum(s_w))
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
targets %>% group_by(get("X")) %>% summarise(s_w = score_w(get("X"), features, we_estadao_noticias)) %>% summarise(s = sum(s_w))
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>% summarise(s_w = score_w(get(col), features, modelo)) %>% summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>% summarise(s_w = score_w(get(col), features, modelo)) %>% summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
score_targets(targets, features, we_folha_noticias)
score_targets(targets, features, we_folha_comentarios)
score_targets(targets, features, we_estadao_noticias)
install.packages("partitions")
library("partitions")
install.packages("gmp")
install.packages("~/Área de Trabalho/gmp-6.1.2.tar.bz2", repos = NULL)
install.packages("~/Área de Trabalho/gmp-6.1.2.tar.lz", repos = NULL)
install.packages("~/Área de Trabalho/gmp-6.1.2.tar.xz", repos = NULL)
install.packages("~/Área de Trabalho/gmp_0.5-13.1.tar.gz", repos = NULL, type = "source")
install.packages("gmp")
install.packages("partitions")
library("partitions")
setparts(x)
x
setparts(x)
setparts(4)
jj <- restrictedparts(5,3)
jj
setparts(jj)               # partitions of a set of 5 elements into
listParts(jj)
jj
jj <- restrictedparts(5,2)
setparts(jj)               # partitions of a set of 5 elements into
parts(5)
jj <- restrictedparts(5,2)
jj
jj <- restrictedparts(6,2)
restrictedparts(6,2)
jj<-restrictedparts(6,2)
setparts(jj)               # partitions of a set of 5 elements into
jj<-restrictedparts(1,2)
setparts(jj)               # partitions of a set of 5 elements into
jj
jj<-restrictedparts(2,2)
setparts(jj)               # partitions of a set of 5 elements into
jj<-restrictedparts(3,2)
setparts(jj)               # partitions of a set of 5 elements into
listParts(jj)
jj<-restrictedparts(25,2)
setparts(jj)           # partitions of a set of 5 elements into
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
setparts(c(8,2))         # partitions of a set of 5 elements into
setparts(c(8,8))         # partitions of a set of 5 elements into
a <- setparts(c(8,8))         # partitions of a set of 5 elements into
a[1]
a[1,]
a[,1]
a <- setparts(c(8,8)) %>% as.data.frame()
a <- setparts(c(8,8)) %>% as.matrix()
View(a)
a[,3250]
table(a[,3250])
table(a[,3150])
table(a[,6235])
setparts(1)
setparts(2)
setparts(3)
setparts(4)
setparts(5)
ncols(setparts(5))
ncols(setparts(5) %>% as.matrix())
ncol(setparts(5) %>% as.matrix())
ncol(setparts(2) %>% as.matrix())
ncol(setparts(3) %>% as.matrix())
ncol(setparts(4) %>% as.matrix())
ncol(setparts(5) %>% as.matrix())
ncol(setparts(8) %>% as.matrix())
ncol(setparts(16) %>% as.matrix())
q<-setparts(c(8,8)) %>% as.matrix()
q<-setparts(c(9,9)) %>% as.matrix()
set.seed(1)
x <- runif(20)
y <- 0.5 * x
y <- y + rnorm(20)
y
x <- runif(20)
x
nullR <- numeric(length = 1000)
nullR
nullR[1] <- cor(x, y) ## obsered R in [1]
N <- length(x)
N
for(i in seq_len(999) + 1) {
nullR[i] <- cor(x[sample(N)], y)
}
nullR[i]
cor(x[sample(N)], y)
sample(N)
x[sample(N)]
cor(x[sample(N)], y)
hist(nullR)
score_w_features = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
score_w_features = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
score_w_features("X", features, we_estadao_noticias)
score_w_features = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = mean(s_w))
}
score_w_features("X", features, we_estadao_noticias)
score_w_features("A", features, we_estadao_noticias)
score_w("psol", features, we_estadao_noticias)
score_w("pt", features, we_estadao_noticias)
score_w("psdb", features, we_estadao_noticias)
score_w("pv", features, we_estadao_noticias)
score_w("psb", features, we_estadao_noticias)
score_w("prtb", features, we_estadao_noticias)
score_w("pmdb", features, we_estadao_noticias)
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets
targets %>% group_by(X) %>% summarise(s = score_w(Y, features, we_estadao_noticias))
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets %>% group_by(X) %>% summarise(s = score_w("psol", features, we_estadao_noticias))
score_w("psol", features, we_estadao_noticias)
score_w("pmdb", features, we_estadao_noticias)
targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, modelo))
targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
a = targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
print(a)
a %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
e = targets %>% group_by(get("Y")) %>%
summarise(s_w = score_w(get("Y"), features, we_estadao_noticias))
q - e
q$s_w
View(q)
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
modelo = we_estadao_noticias
mean_w_A = mean_cosDist(w, "A")
w = "psol"
mean_w_A = mean_cosDist(w, "A")
mean_w_A
mean_w_A = mean_cosDist(w, "A")
mean_w_A
View(mean_w_A)
mean_w_B
mean_w_B = mean_cosDist(w, "B")
mean_w_B
View(mean_w_B)
mean_w_A - mean_w_B
q = mean_w_A - mean_w_B
View(q)
score_w("psol", features, we_estadao_noticias)
q = score_w("psol", features, we_estadao_noticias)
View(q)
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric_version())
}
q = score_w("psol", features, we_estadao_noticias)
q
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
q = score_w("psol", features, we_estadao_noticias)
q
score_w("psol", features, we_estadao_noticias)
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
q
e = targets %>% group_by(get("Y")) %>%
summarise(s_w = score_w(get("Y"), features, we_estadao_noticias))
e
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
q
s_w = funtion(col){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
x
y
y = s_w("Y")
y
x
x_mean = x %>% summarise(mean = s_w)
x_mean
x_mean = x %>% summarise(mean = mean(s_w))
x_mean
y_mean = y %>% summarise(mean = mean(s_w))
y_mean
w_sd = bind_rows(x, y)
w_sd
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w))
w_sd
x_mean
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
x_mean
y_mean
w_sd
return((x_mean - y_mean)/w_sd)
(x_mean - y_mean)/w_sd
effect_size(targets, features, modelo)
effect_size <- function(targets, features, modelo){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
y = s_w("Y")
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
return((x_mean - y_mean)/w_sd)
}
effect_size(targets, features, modelo)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
## TO DO
