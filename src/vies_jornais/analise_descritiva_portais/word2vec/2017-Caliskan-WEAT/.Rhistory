n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
q = permutacao(x, y)
Xi = q$Xi
Yi = q$Yi
Yi
remove_repeated_sets = function(Yi){
duplicated(Yi)
}
duplicated(Yi)
duplicados =  duplicated(Yi)
permutacoes_estadao_noticias$Yi
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi, Yi))
}
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacoes_estadao_noticias = permutacao(x, y)
permutacoes_estadao_noticias
permutacoes_estadao_noticias = permutacao(x, y)
permutacoes_estadao_noticias
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
print(table(duplicados))
Xi = Xi[duplicados,]
Yi = Yi[duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacoes_estadao_noticias = permutacao(x, y)
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[!duplicados,]
Yi = Yi[!duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacoes_estadao_noticias = permutacao(x, y)
permutacoes_estadao_noticias
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_estado_noticias
score_X_Y_estadao_noticias
score_Xi_Yi_estado_noticias
x
y
score_targets(c("aécio","dilma","fhc","lula"), c("rousseff","pt","neves","psdb"), a, b, we_estadao_noticias)
score_Xi_Yi_estado_noticias
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
modelo_contem_palavra <- function(features, targets, modelo){
checa_palavra_em_modelo <- function(w, modelo){
wv = modelo[[w]]
contem = (is.nan(wv[1,1]) == F) #se vetor contem nan, entao nao existe a palavra no modelo
return(contem)
}
ok_a = features %>% group_by(get("A")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("A"), modelo))
ok_b = features %>% group_by(get("B")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("B"), modelo))
ok_x = targets %>% group_by(get("X")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("X"), modelo))
ok_y = targets %>% group_by(get("Y")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("Y"), modelo))
all_true_a = (ok_a %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_a %>% distinct(palavras_do_modelo) == T)
if(!all_true_a){
print(ok_a)
}
all_true_b = (ok_b %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_b %>% distinct(palavras_do_modelo) == T)
if(!all_true_b){
print(ok_b)
}
all_true_x = (ok_x %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_x %>% distinct(palavras_do_modelo) == T)
if(!all_true_x){
print(ok_x)
}
all_true_y = (ok_y %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_y %>% distinct(palavras_do_modelo) == T)
if(!all_true_y){
print(ok_y)
}
all_true = ((all_true_a && all_true_b) && (all_true_x && all_true_y))
return(all_true)
}
x = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "prazer", "gentil", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "sujeira", "doença", "acidente", "morte", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
# x, y = target, a, b = atributo
# divisao por partidos
x = c("pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("dilma", "rousseff", "lula", "pt")
b = c("aécio", "neves", "fhc", "psdb")
x = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("estável", "sempre", "longo", "constante", "persistência")
b = c("instável", "variável", "curto", "breve", "passagem")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes_estadao_noticias = permutacao(x, y)
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
effect_size(x, y, b, a, we_estadao_noticias)
3/30
3/70
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
effect_size(x, y, b, a, we_estadao_noticias)
x
y
permutacoes_estadao_noticias = permutacao(x, y)
score_Xi_Yi_folha_noticias
score_Xi_Yi_estado_noticias
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_folha_noticias = score_targets(x, y, a, b, we_folha_noticias)
permutacoes_folha_noticias = permutacao(x, y)
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes_folha_noticias$Xi, permutacoes_folha_noticias$Yi, a, b, we_folha_noticias)
a
b
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes_folha_noticias$Xi, permutacoes_folha_noticias$Yi, a, b, we_folha_noticias)
score_Xi_Yi_folha_noticias
score_X_Y_folha_noticias
pvalor(score_Xi_Yi_folha_noticias$score, score_X_Y_folha_noticias)
effect_size(x, y, a, b, we_folha_noticias)
score_X_Y_folha_noticias
score_Xi_Yi_folha_noticias
x = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
score_X_Y_estadao_noticias
permutacoes_estadao_noticias = permutacao(x, y)
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "prazer", "gentil", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "sujeira", "doença", "acidente", "morte", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
modelo_contem_palavra(features, targets, we_folha_noticias)
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "doença", "acidente", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
score_X_Y_estadao_noticias
permutacoes_estadao_noticias = permutacao(x, y)
permutacoes_estadao_noticias
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_estado_noticias
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
effect_size(x, y, b, a, we_estadao_noticias)
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
b = c("sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes_estadao_noticias = permutacao(x, y)
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
effect_size(x, y, b, a, we_estadao_noticias)
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, score = scores) %>% arrange(-score)
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_estado_noticias
score_X_Y_estadao_noticias
score_Xi_Yi_estado_noticias
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
score_Xi_Yi_estado_noticias
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("estável", "sempre", "longo", "constante", "persistência")
b = c("instável", "variável", "curto", "breve", "passagem")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes_estadao_noticias = permutacao(x, y)
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi, permutacoes_estadao_noticias$Yi, a, b, we_estadao_noticias)
pvalor(score_Xi_Yi_estado_noticias$score, score_X_Y_estadao_noticias)
score_X_Y_estadao_noticias
score_Xi_Yi_estado_noticias
a
x
a
b
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, as.name(name) = scores) %>% arrange(-score)
return(targets_permuted)
}
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, as.name(name) = scores) %>% arrange(-score)
return(targets_permuted)
}
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, .dots = c(name = scores)) %>% arrange(-score)
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, .dots = c(name = scores))# %>% arrange_(-name)
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, get(name) = scores)# %>% arrange_(-name)
return(targets_permuted)
}
?rename
iris
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, temp = scores) %>% rename_(name = quote(temp))
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
print(name)
targets_permuted = bind_cols(targets_permuted, temp = scores) %>% rename_(name = quote(temp))
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
print(name)
targets_permuted = bind_cols(targets_permuted, !!name := scores)
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
print(name)
targets_permuted = bind_cols(targets_permuted, !!name = scores)
return(targets_permuted)
}
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
print(name)
targets_permuted = bind_cols(targets_permuted, name := scores)
return(targets_permuted)
}
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estado_noticias
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
targets_permuted = bind_cols(targets_permuted, !!name := scores)
return(targets_permuted)
}
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes = permutacao(x, y)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi, a, b, we_folha_noticias, "score_folha")
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_noticias, "score_folha")
score_Xi_Yi_folha_comentarios = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_comentarios, "score_folha_comentarios")
score_Xi_Yi_folha_comentarios
score_Xi_Yi_folha_noticias
score_Xi_Yi_estadao_noticias
permutacoes[1:2,]
permutacoes
score_permutacoes <- function(Xi, Yi, a, b, modelo, name){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
scores = targets_permuted %>% apply(1, FUN = function(x){
Xi_values = x[which(names(x) %in% cols_in_Xi)]
Yi_values = x[which(names(x) %in% cols_in_Yi)]
return(score_targets(Xi_values, Yi_values, a, b, modelo))
})
#targets_permuted = bind_cols(targets_permuted, !!name := scores)
return(scores)
#return(targets_permuted)
}
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_estadao_noticias, "score_estadao")
score_Xi_Yi_estadao_noticias
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_noticias, "score_folha")
score_Xi_Yi_folha_comentarios = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_comentarios, "score_folha_comentarios")
bind_cols(permutacoes$Xi, permutacoes$Yi, score_Xi_Yi_estadao_noticias)
bind_cols(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], score_Xi_Yi_estadao_noticias)
permutacoes$Xi[1:2,]
permutacoes$Yi[1:2,]
score_Xi_Yi_estadao_noticias
bind_rows(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], score_Xi_Yi_estadao_noticias)
bind_cols(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a = score_Xi_Yi_estadao_noticias)
bind_cols(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], score_estadao = score_Xi_Yi_estadao_noticias)
bind_cols(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], score_estadao = score_Xi_Yi_estadao_noticias, score_folha = score_Xi_Yi_folha_noticias, score_folha_comentarios = score_Xi_Yi_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes = permutacao(x, y)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_estadao_noticias)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_estadao_noticias)
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_noticias)
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_noticias)
score_Xi_Yi_folha_comentarios = score_permutacoes(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], a, b, we_folha_comentarios)
bind_cols(permutacoes$Xi[1:2,], permutacoes$Yi[1:2,], score_estadao = score_Xi_Yi_estadao_noticias, score_folha = score_Xi_Yi_folha_noticias, score_folha_comentarios = score_Xi_Yi_folha_comentarios)
scores = bind_cols(permutacoes$Xi, permutacoes$Yi, score_estadao = score_Xi_Yi_estadao_noticias, score_folha = score_Xi_Yi_folha_noticias, score_folha_comentarios = score_Xi_Yi_folha_comentarios)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_estadao_noticias)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes = permutacao(x, y)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_folha_noticias)
score_Xi_Yi_folha_comentarios = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_folha_comentarios)
scores = bind_cols(permutacoes$Xi, permutacoes$Yi, score_estadao = score_Xi_Yi_estadao_noticias, score_folha = score_Xi_Yi_folha_noticias, score_folha_comentarios = score_Xi_Yi_folha_comentarios)
scores
pvalor(scores$score_estadao, score_X_Y_estadao_noticias)
