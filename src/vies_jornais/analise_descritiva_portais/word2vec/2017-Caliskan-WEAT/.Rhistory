setdiff(all_targets, x)
}) %>% t() %>% as_tibble()
Yi
permutacao <- function(x, y){
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_tibble()
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as_tibble()
return(list(Xi = Xi, Yi = Yi))
}
q = permutacao(x, y)
q$Xi
q = permutacao(x, y)
q$Xi
q$Yi
q$Xi$V1
q
score_targets <- function(targets, features, modelo){
sum_s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_w <- function(w, a, b, modelo){
mean_cosSim = function(w, palavras){
features = tibble(palavras = palavras)
mean = features %>% group_by(palavras) %>%
summarise(cosine = cosSim_model(modelo, w, palavras)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, a)
mean_w_B = mean_cosSim(w, b)
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_w("dilma", a, b)
score_w("dilma", a, b, we_estadao_noticias)
score_w("psdb", a, b, we_estadao_noticias)
score_w("psb", a, b, we_estadao_noticias)
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(s_w = score_w(palavras, a, b, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
x
y
a
b
score_targets(x, y, a, b, we_estadao_noticias)
score_targets <- function(targets, features, modelo){
sum_s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
targets
features
score_targets(targets, features, we_estadao_noticias)
score_targets(targets, features, we_estadao_noticias)
score_targets <- function(targets, features, modelo){
sum_s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
score_targets <- function(targets, features, modelo){
sum_s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X")
sum_w_Y = sum_s_w("Y")
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
score_w <- function(w, features, modelo){
mean_cosSim = function(w, col){
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosSim_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, "A")
mean_w_B = mean_cosSim(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets(targets, features, we_estadao_noticias)
score_w <- function(w, a, b, modelo){
mean_cosSim = function(w, palavras){
features = tibble(palavras = palavras)
mean = features %>% group_by(palavras) %>%
summarise(cosine = cosSim_model(modelo, w, palavras)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, a)
mean_w_B = mean_cosSim(w, b)
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(s_w = score_w(palavras, a, b, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_targets(x, y, a, b, we_estadao_noticias)
effect_size <- function(x, y, a, b, modelo){
s_w = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(s_w = score_w(palavras, a, b, modelo))
}
x = s_w(x)
y = s_w(y)
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
return((x_mean - y_mean)/w_sd)
}
effect_size(x, y, a, b, we_estadao_noticias)
w_wefat("dilma", a, b, we_estadao_noticias)
w_wefat <- function(w, a, b, modelo){
numerador = score_w(w, features, modelo)
s_w = function(palavras){
features = tibble(palavras = palavras)
features %>% group_by(palavras) %>%
summarise(s = cosSim_model(modelo, w, palavras))
}
s_a = s_w(a)
s_b = s_w(b)
w_wefat = bind_rows(s_a, s_b) %>% summarise(sd = sd(s)) %>% as.numeric()
return(w_wefat)
}
w_wefat("dilma", a, b, we_estadao_noticias)
w_wefat <- function(w, a, b, modelo){
numerador = score_w(w, features, modelo)
s_w = function(palavras){
print(palavras)
features = tibble(palavras = palavras)
features %>% group_by(palavras) %>%
summarise(s = cosSim_model(modelo, w, palavras))
}
s_a = s_w(a)
s_b = s_w(b)
w_wefat = bind_rows(s_a, s_b) %>% summarise(sd = sd(s)) %>% as.numeric()
return(w_wefat)
}
w_wefat("dilma", a, b, we_estadao_noticias)
a
b
w_wefat <- function(w, a, b, modelo){
numerador = score_w(w, a, b, modelo)
s_w = function(palavras){
features = tibble(palavras = palavras)
features %>% group_by(palavras) %>%
summarise(s = cosSim_model(modelo, w, palavras))
}
s_a = s_w(a)
s_b = s_w(b)
w_wefat = bind_rows(s_a, s_b) %>% summarise(sd = sd(s)) %>% as.numeric()
return(w_wefat)
}
w_wefat("dilma", a, b, we_estadao_noticias)
wefat <- function(x, y, a, b, modelo){
get_w_wefat = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(w_wefat = w_wefat(palavras, a, b, modelo))
}
w_wefat_x = get_w_wefat(x)
w_wefat_y = get_w_wefat(y)
w_wefat = bind_rows(w_wefat_x, w_wefat_y) %>% arrange(-w_wefat)
return(w_wefat)
}
wefat(x, y, a, b, we_estadao_noticias)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
modelo_contem_palavra <- function(features, targets, modelo){
checa_palavra_em_modelo <- function(w, modelo){
wv = modelo[[w]]
contem = (is.nan(wv[1,1]) == F) #se vetor contem nan, entao nao existe a palavra no modelo
return(contem)
}
ok_a = features %>% group_by(get("A")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("A"), modelo))
ok_b = features %>% group_by(get("B")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("B"), modelo))
ok_x = targets %>% group_by(get("X")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("X"), modelo))
ok_y = targets %>% group_by(get("Y")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("Y"), modelo))
all_true_a = (ok_a %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_a %>% distinct(palavras_do_modelo) == T)
if(!all_true_a){
print(ok_a)
}
all_true_b = (ok_b %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_b %>% distinct(palavras_do_modelo) == T)
if(!all_true_b){
print(ok_b)
}
all_true_x = (ok_x %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_x %>% distinct(palavras_do_modelo) == T)
if(!all_true_x){
print(ok_x)
}
all_true_y = (ok_y %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_y %>% distinct(palavras_do_modelo) == T)
if(!all_true_y){
print(ok_y)
}
all_true = ((all_true_a && all_true_b) && (all_true_x && all_true_y))
return(all_true)
}
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_targets(x, y, a, b, we_estadao_noticias)
effect_size(x, y, a, b, we_estadao_noticias)
q = permutacao(x, y)
bind_cols(Xi, Yi)
q = permutacao(x, y)
Xi = q$Xi
Yi = q$Yi
cols_in_Yi = colnames(Yi)
cols_in_Xi = colnames(Xi)
cols_in_Yi
cols_in_Xi
?rename
w=bind_cols(Xi, Yi)
View(w)
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename(num_range("X", 1:n/2))
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename(num_range("X", 1:n/2) = num_range("V", 1:n/2))
Xi_names = Xi %>% colnames()
Xi_names
Xi_new_names = Xi_names %>% paste0()
Xi_new_names
Xi_new_names = Xi_names %>% paste0("X")
Xi_new_names
Xi_names = Xi %>% colnames() %>% paste0("X")
Xi = Xi %>% rename(Xi_names)
Xi_names = Xi %>% colnames()
Xi_new_names = Xi_names %>% paste0("X")
Xi %>% rename(Xi_names = Xi_new_names)
Xi_new_names = Xi_names %>% paste0("X")
Xi %>% rename(Xi_names = Xi_new_names)
Xi_new_names
Xi_names
Xi_names = Xi %>% colnames()
Xi_new_names = Xi_names %>% paste0("X")
Xi
Xi %>% rename(Xi_names = get(Xi_new_names))
Xi %>% rename(get(Xi_names) = Xi_new_names)
Xi %>% rename(Xi_names = Xi_new_names)
?rename_all
Xi %>% rename_all(Xi_new_names)
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(paste("X"))
Xi = permutations(n, n/2, all_targets) %>% as_tibble()
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(paste("X"))
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(funs(paste("X")))
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(toupper)
View(Xi)
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(mean)
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all("toupper")
is_whole
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(is_whole)
Xi = permutations(n, n/2, all_targets) %>% as_tibble() %>% rename_all(toupper)
Xi = permutations(n, n/2, all_targets) %>% as_tibble()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Xi
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
Yi
Xi = q$Xi
Yi = q$Yi
Xi
q = permutacao(x, y)
Xi = q$Xi
Yi = q$Yi
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
cols_in_Xi
cols_in_Yi
Yi
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_tibble()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as_tibble()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
Yi
Xi
permutacao <- function(x, y){
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_tibble()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as_tibble()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
q = permutacao(x, y)
Xi = q$Xi
Yi = q$Yi
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
cols_in_Xi
cols_in_Yi
targets_permuted=bind_cols(Xi, Yi)
cols_in_Xi
cols_in_Yi
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(cols_in_Xi, cols_in_Yi, a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(starts_with("X"), starts_with("Y"), a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% score_targets(starts_with("X"), starts_with("Y"), a, b, we_estadao_noticias)
targets_permuted[1:10,] %>% group_by(cols_in_Xi, cols_in_Yi) %>% summarise(score = score_targets(starts_with("X"), starts_with("Y"), a, b, we_estadao_noticias))
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted=bind_cols(Xi, Yi)
targets_permuted[1:10,] %>% group_by(cols_in_Xi, cols_in_Yi) %>% summarise(score = score_targets(starts_with("X"), starts_with("Y"), a, b, we_estadao_noticias))
print_a = function(x){
print(x)
}
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(cols_in_Xi))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(V1))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(XV1))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(get(cols_in_Xi)))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(s_w = score_w(palavras, a, b, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x) %>% as.numeric()
sum_w_Y = sum_s_w(y) %>% as.numeric()
return(sum_w_X - sum_w_Y)
}
targets_permuted[1,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
r = targets_permuted[1:100,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
View(r)
r = targets_permuted[1:100,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
View(r)
start.time <- Sys.time()
targets_permuted[1:100,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
targets_permuted[1:100,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
score_permutacoes <- function(Xi, Yi, a, b){
Xi = q$Xi
Yi = q$Yi
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi) %>% rowwise() %>%
mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
return(targets_permuted)
}
score_permutacoes <- function(Xi, Yi, a, b, modelo){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi) %>% rowwise() %>%
mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, modelo))
return(targets_permuted)
}
s = score_permutacoes(q$Xi, q$Yi)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
s = score_permutacoes(q$Xi[1:10,], q$Yi[1:10,], a, b, we_estadao_noticias)
View(s)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
View(s)
x <- c(9:20, 1:5, 3:7, 0:8)
x
(xu <- x[!duplicated(x)])
(xu2 <- x[!duplicated(x, fromLast = TRUE)])
xu2
stopifnot(identical(xu,  unique(x)),
identical(xu2, unique(x, fromLast = TRUE)))
duplicated(iris)
duplicated(iris)[140:143]
iris
(iris)[140:143]
iris[140:143]
iris[140:143,]
duplicated(iris3, MARGIN = c(1, 3))
anyDuplicated(iris) ## 143
anyDuplicated(s)
Xi
Xi[1,]
Xi[1,] %>% is.vector()
Xi[1,] %>% sort()
Xi[1,] %>% as.vector() %>% sort()
Xi[1,] %>% as.vector()
permutacao <- function(x, y){
# remove_repeated_sets = function(Xi){
#   Xi[1,] %>% as.vector() %>% sort()
# }
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_data_frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as_data_frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
x
y
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_data_frame()
Xi
Xi = permutations(n, n/2, all_targets) %>% as.data.frame()
Xi
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
list(Xi = Xi, Yi = Yi)
q = permutacao(x, y)
permutacao <- function(x, y){
# remove_repeated_sets = function(Xi){
#   Xi[1,] %>% as.vector() %>% sort()
# }
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
q = permutacao(x, y)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
s = score_permutacoes(q$Xi[1:10,], q$Yi[1:10,], a, b, we_estadao_noticias)
s
Xi
Xi[1,] %>% as.vector() %>% sort()
Xi[1,] %>% as.vector() %>% sort() %>% paste0()
Xi[1,] %>% as.vector() %>% sort() %>% paste()
Xi[1,] %>% as.vector() %>% sort() %>% paste(sep="-")
Xi[1,] %>% as.vector() %>% sort() %>% as.character() %>% paste(sep="-")
Xi[1,] %>% sort() %>% as.character() %>% paste(sep="-")
Xi[1,]
Xi[2,]
Xi[15,]
Xi[1515,]
Xi[1515,] %>% sort()
Xi[1515,] %>% sort() %>% as.character()
Xi[1515,] %>% sort()
Xi[1515,] %>% sort() %>% paste(sep="-")
?paste
Xi[1515,] %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% rowwise() %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% rowwise() %>% paste(collapse="-")
Xi[1515:1520,] %>% group_by(colnames(Xi))
Xi[1515:1520,] %>% group_by(get(colnames(Xi)))
Xi[1515:1520,] %>% group_by(get(colnames(Xi))) %>% sort()
Xi[1515:1520,] %>% group_by(get(colnames(Xi))) %>% as.character() %>% sort()
