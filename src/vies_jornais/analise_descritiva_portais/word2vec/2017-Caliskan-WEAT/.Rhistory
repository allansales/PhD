summarise(s_w = score_w(get(col), features, modelo))
}
score_w_features("X", features, we_estadao_noticias)
score_w_features = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = mean(s_w))
}
score_w_features("X", features, we_estadao_noticias)
score_w_features("A", features, we_estadao_noticias)
score_w("psol", features, we_estadao_noticias)
score_w("pt", features, we_estadao_noticias)
score_w("psdb", features, we_estadao_noticias)
score_w("pv", features, we_estadao_noticias)
score_w("psb", features, we_estadao_noticias)
score_w("prtb", features, we_estadao_noticias)
score_w("pmdb", features, we_estadao_noticias)
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets
targets %>% group_by(X) %>% summarise(s = score_w(Y, features, we_estadao_noticias))
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return(mean_w_A - mean_w_B)
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets %>% group_by(X) %>% summarise(s = score_w(X, features, we_estadao_noticias))
targets %>% group_by(X) %>% summarise(s = score_w("psol", features, we_estadao_noticias))
score_w("psol", features, we_estadao_noticias)
score_w("pmdb", features, we_estadao_noticias)
targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, modelo))
targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
a = targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
print(a)
a %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
e = targets %>% group_by(get("Y")) %>%
summarise(s_w = score_w(get("Y"), features, we_estadao_noticias))
q - e
q$s_w
View(q)
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
modelo = we_estadao_noticias
mean_w_A = mean_cosDist(w, "A")
w = "psol"
mean_w_A = mean_cosDist(w, "A")
mean_w_A
mean_w_A = mean_cosDist(w, "A")
mean_w_A
View(mean_w_A)
mean_w_B
mean_w_B = mean_cosDist(w, "B")
mean_w_B
View(mean_w_B)
mean_w_A - mean_w_B
q = mean_w_A - mean_w_B
View(q)
score_w("psol", features, we_estadao_noticias)
q = score_w("psol", features, we_estadao_noticias)
View(q)
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric_version())
}
q = score_w("psol", features, we_estadao_noticias)
q
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
q = score_w("psol", features, we_estadao_noticias)
q
score_w("psol", features, we_estadao_noticias)
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
q
e = targets %>% group_by(get("Y")) %>%
summarise(s_w = score_w(get("Y"), features, we_estadao_noticias))
e
q = targets %>% group_by(get("X")) %>%
summarise(s_w = score_w(get("X"), features, we_estadao_noticias))
q
s_w = funtion(col){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
x
y
y = s_w("Y")
y
x
x_mean = x %>% summarise(mean = s_w)
x_mean
x_mean = x %>% summarise(mean = mean(s_w))
x_mean
y_mean = y %>% summarise(mean = mean(s_w))
y_mean
w_sd = bind_rows(x, y)
w_sd
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w))
w_sd
x_mean
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
x_mean
y_mean
w_sd
return((x_mean - y_mean)/w_sd)
(x_mean - y_mean)/w_sd
effect_size(targets, features, modelo)
effect_size <- function(targets, features, modelo){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
y = s_w("Y")
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
return((x_mean - y_mean)/w_sd)
}
effect_size(targets, features, modelo)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
## TO DO
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
## TO DO
effect_size <- function(targets, features, modelo){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
y = s_w("Y")
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
return((x_mean - y_mean)/w_sd)
}
effect_size(targets, features, modelo)
effect_size(targets, features, we_estadao_noticias)
effect_size(targets, features, we_folha_comentarios)
effect_size(targets, features, we_folha_noticias)
targets[1,1]
x[1]
numerador <- score_w(x[1],features, we_estadao_noticias)
numerador
numerador <- score_w(x[1],features, we_folha_comentarios)
numerador
numerador <- score_w(x[1],features, we_folha_noticias)
numerador
x
bind_rows(x, y)
y
x
bind_rows(x, y)
s_w = function(col){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), w, modelo))
}
s_w = function(col, w){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), w, modelo))
}
x[1]
ax = s_w("A", x[1])
s_w = function(col, w){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), w, modelo))
}
s_w = function(col, w, modelo){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(w, get(col), we_estadao_noticias))
}
ax = s_w("A", x[1], we_estadao_noticias)
s_w = function(col, w, modelo){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(w, get(col), modelo))
}
ax = s_w("A", x[1], we_estadao_noticias)
s_w = function(col, w, modelo){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(w, get(col), modelo))
}
ax = s_w("A", x[1], we_estadao_noticias)
ay = s_w("B", x[1], we_estadao_noticias)
score_w <- function(w, features, modelo){
print("aqui")
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
s_w = function(col, w, modelo){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(w, get(col), modelo))
}
ax = s_w("A", x[1], we_estadao_noticias)
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
score_w <- function(w, features, modelo){
print(w)
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
s_w = function(col, w, modelo){
features %>% group_by(get(col)) %>%
summarise(s_w = score_w(w, get(col), modelo))
}
ax = s_w("A", x[1], we_estadao_noticias)
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
cosDist_model = function(modelo, w, col){
print(w)
cosineDist(modelo[[w]], modelo[[col]])
}
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
ax = s_w("A", x[1], we_estadao_noticias)
cosDist_model <- function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
col = "A"
features %>% group_by(get(col)) %>% summarise(sim = cosDist_model(we_estadao_noticias, w, col))
features %>% group_by(get(col)) %>% summarise(sim = cosDist_model(we_estadao_noticias, x[1], col))
cosDist_model(we_estadao_noticias, x[1], x[2])
features %>% group_by(get(col)) %>% summarise(sim = cosDist_model(we_estadao_noticias, x[1], get(col)))
col = "B"
features %>% group_by(get(col)) %>% summarise(sim = cosDist_model(we_estadao_noticias, x[1], get(col)))
s_w = function(modelo, w, col){
features %>% group_by(get(col)) %>%
summarise(sim = cosDist_model(modelo, w, get(col)))
}
col = "B"
s_a = s_w(we_estadao_noticias, x[1], col)
s_a
col = "A"
s_a = s_w(we_estadao_noticias, x[1], col)
s_a = s_w(we_estadao_noticias, x[1], "A")
s_b = s_w(we_estadao_noticias, x[1], "B")
s_a
s_b
s_b
s_w = function(modelo, w, col){
features %>% group_by(get(col)) %>%
summarise(s = cosDist_model(modelo, w, get(col)))
}
s_a = s_w(we_estadao_noticias, x[1], "A")
s_b = s_w(we_estadao_noticias, x[1], "B")
bind_rows(s_a, s_b) %>% summarise(sd = sd(s))
wefat <- function(w, features, modelo){
numerador = score_w(w, features, modelo)
s_w = function(modelo, w, col){
features %>% group_by(get(col)) %>%
summarise(s = cosDist_model(modelo, w, get(col)))
}
s_a = s_w(modelo, w, "A")
s_b = s_w(modelo, w, "B")
w_wefat = bind_rows(s_a, s_b) %>% summarise(sd = sd(s)) %>% as.numeric()
return(w_wefat)
}
wefat(x[1], features, we_estadao_noticias)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
library("partitions")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
x = c("psol","pmdb")
y = c("psb", "pv")
a = c("pt", "dilma", "rousseff")
b = c("psdb", "aécio", "neves")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
# Calcula score de uma palavra para os conjuntos A e B
cosDist_model <- function(modelo, w, col){
cosineDist(modelo[[w]], modelo[[col]])
}
score_w <- function(w, features, modelo){
mean_cosDist = function(w, col){
mean = features %>% group_by(get(col)) %>%
summarise(cosine = cosDist_model(modelo, w, get(col))) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosDist(w, "A")
mean_w_B = mean_cosDist(w, "B")
return((mean_w_A - mean_w_B) %>% as.numeric())
}
score_targets <- function(targets, features, modelo){
sum_s_w = function(col, features, modelo){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w("X", features, modelo)
sum_w_Y = sum_s_w("Y", features, modelo)
return(sum_w_X - sum_w_Y)
}
score_targets(targets, features, we_estadao_noticias)
## TO DO
effect_size <- function(targets, features, modelo){
s_w = function(col){
targets %>% group_by(get(col)) %>%
summarise(s_w = score_w(get(col), features, modelo))
}
x = s_w("X")
y = s_w("Y")
x_mean = x %>% summarise(mean = mean(s_w)) %>% as.numeric()
y_mean = y %>% summarise(mean = mean(s_w)) %>% as.numeric()
w_sd = bind_rows(x, y) %>% summarise(sd = sd(s_w)) %>% as.numeric()
return((x_mean - y_mean)/w_sd)
}
effect_size(targets, features, we_folha_noticias)
wefat <- function(w, features, modelo){
numerador = score_w(w, features, modelo)
s_w = function(modelo, w, col){
features %>% group_by(get(col)) %>%
summarise(s = cosDist_model(modelo, w, get(col)))
}
s_a = s_w(modelo, w, "A")
s_b = s_w(modelo, w, "B")
w_wefat = bind_rows(s_a, s_b) %>% summarise(sd = sd(s)) %>% as.numeric()
return(w_wefat)
}
wefat(x[1], features, we_estadao_noticias)
