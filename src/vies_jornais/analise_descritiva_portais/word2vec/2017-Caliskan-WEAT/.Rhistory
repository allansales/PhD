targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(cols_in_Xi))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(V1))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(XV1))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = print_a(get(cols_in_Xi)))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
targets = tibble(palavras = palavras)
targets %>% group_by(palavras) %>%
summarise(s_w = score_w(palavras, a, b, modelo)) %>%
summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x) %>% as.numeric()
sum_w_Y = sum_s_w(y) %>% as.numeric()
return(sum_w_X - sum_w_Y)
}
targets_permuted[1,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
targets_permuted[1:10,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
r = targets_permuted[1:100,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
View(r)
r = targets_permuted[1:100,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
View(r)
start.time <- Sys.time()
targets_permuted[1:100,] %>% rowwise() %>% summarise(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
start.time <- Sys.time()
targets_permuted[1:100,] %>% rowwise() %>% mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken
score_permutacoes <- function(Xi, Yi, a, b){
Xi = q$Xi
Yi = q$Yi
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi) %>% rowwise() %>%
mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, we_estadao_noticias))
return(targets_permuted)
}
score_permutacoes <- function(Xi, Yi, a, b, modelo){
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi) %>% rowwise() %>%
mutate(score = score_targets(get(cols_in_Xi), get(cols_in_Yi), a, b, modelo))
return(targets_permuted)
}
s = score_permutacoes(q$Xi, q$Yi)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
s = score_permutacoes(q$Xi[1:10,], q$Yi[1:10,], a, b, we_estadao_noticias)
View(s)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
View(s)
x <- c(9:20, 1:5, 3:7, 0:8)
x
(xu <- x[!duplicated(x)])
(xu2 <- x[!duplicated(x, fromLast = TRUE)])
xu2
stopifnot(identical(xu,  unique(x)),
identical(xu2, unique(x, fromLast = TRUE)))
duplicated(iris)
duplicated(iris)[140:143]
iris
(iris)[140:143]
iris[140:143]
iris[140:143,]
duplicated(iris3, MARGIN = c(1, 3))
anyDuplicated(iris) ## 143
anyDuplicated(s)
Xi
Xi[1,]
Xi[1,] %>% is.vector()
Xi[1,] %>% sort()
Xi[1,] %>% as.vector() %>% sort()
Xi[1,] %>% as.vector()
permutacao <- function(x, y){
# remove_repeated_sets = function(Xi){
#   Xi[1,] %>% as.vector() %>% sort()
# }
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_data_frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as_data_frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
x
y
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as_data_frame()
Xi
Xi = permutations(n, n/2, all_targets) %>% as.data.frame()
Xi
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
list(Xi = Xi, Yi = Yi)
q = permutacao(x, y)
permutacao <- function(x, y){
# remove_repeated_sets = function(Xi){
#   Xi[1,] %>% as.vector() %>% sort()
# }
all_targets <- c(x,y)
n = length(all_targets)
Xi = permutations(n, n/2, all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(list(Xi = Xi, Yi = Yi))
}
q = permutacao(x, y)
s = score_permutacoes(q$Xi, q$Yi, a, b, we_estadao_noticias)
s = score_permutacoes(q$Xi[1:10,], q$Yi[1:10,], a, b, we_estadao_noticias)
s
Xi
Xi[1,] %>% as.vector() %>% sort()
Xi[1,] %>% as.vector() %>% sort() %>% paste0()
Xi[1,] %>% as.vector() %>% sort() %>% paste()
Xi[1,] %>% as.vector() %>% sort() %>% paste(sep="-")
Xi[1,] %>% as.vector() %>% sort() %>% as.character() %>% paste(sep="-")
Xi[1,] %>% sort() %>% as.character() %>% paste(sep="-")
Xi[1,]
Xi[2,]
Xi[15,]
Xi[1515,]
Xi[1515,] %>% sort()
Xi[1515,] %>% sort() %>% as.character()
Xi[1515,] %>% sort()
Xi[1515,] %>% sort() %>% paste(sep="-")
?paste
Xi[1515,] %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% rowwise() %>% sort() %>% paste(collapse="-")
Xi[1515:1520,] %>% rowwise() %>% paste(collapse="-")
Xi[1515:1520,] %>% group_by(colnames(Xi))
Xi[1515:1520,] %>% group_by(get(colnames(Xi)))
Xi[1515:1520,] %>% group_by(get(colnames(Xi))) %>% sort()
Xi[1515:1520,] %>% group_by(get(colnames(Xi))) %>% as.character() %>% sort()
install.packages("purrr")
library(purrr)
1:10 %>%
map(function(x) rnorm(10, x))
1:10
rnorm(10, x)
?rnorm
rnorm(1)
rnorm(2)
rnorm(3)
rnorm(1:10)
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras)
palavras %>% map(function(x) paste(x, collapse=""))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
modelo_contem_palavra <- function(features, targets, modelo){
checa_palavra_em_modelo <- function(w, modelo){
wv = modelo[[w]]
contem = (is.nan(wv[1,1]) == F) #se vetor contem nan, entao nao existe a palavra no modelo
return(contem)
}
ok_a = features %>% group_by(get("A")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("A"), modelo))
ok_b = features %>% group_by(get("B")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("B"), modelo))
ok_x = targets %>% group_by(get("X")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("X"), modelo))
ok_y = targets %>% group_by(get("Y")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("Y"), modelo))
all_true_a = (ok_a %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_a %>% distinct(palavras_do_modelo) == T)
if(!all_true_a){
print(ok_a)
}
all_true_b = (ok_b %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_b %>% distinct(palavras_do_modelo) == T)
if(!all_true_b){
print(ok_b)
}
all_true_x = (ok_x %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_x %>% distinct(palavras_do_modelo) == T)
if(!all_true_x){
print(ok_x)
}
all_true_y = (ok_y %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_y %>% distinct(palavras_do_modelo) == T)
if(!all_true_y){
print(ok_y)
}
all_true = ((all_true_a && all_true_b) && (all_true_x && all_true_y))
return(all_true)
}
x = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "prazer", "gentil", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "sujeira", "doença", "acidente", "morte", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
# x, y = target, a, b = atributo
# divisao por partidos
x = c("pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("dilma", "rousseff", "lula", "pt")
b = c("aécio", "neves", "fhc", "psdb")
x = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
y = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
a = c("instável", "variável", "curto", "breve", "passagem")
b = c("estável", "sempre", "longo", "constante", "persistência")
x = c("dilma", "rousseff", "lula", "pt")
y = c("aécio", "neves", "fhc", "psdb")
a = c("estável", "sempre", "longo", "constante", "persistência")
b = c("instável", "variável", "curto", "breve", "passagem")
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
modelo_contem_palavra(features, targets, we_estadao_noticias)
modelo_contem_palavra(features, targets, we_folha_noticias)
modelo_contem_palavra(features, targets, we_folha_comentarios)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
permutacoes_estadao_noticias = permutacao(x, y)
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias)
permutacoes_estadao_noticias$Xi[1:2,]
permutacoes_estadao_noticias$Yi[1:2,]
a
b
score_Xi_Yi_estado_noticias = score_permutacoes(permutacoes_estadao_noticias$Xi[1:2,], permutacoes_estadao_noticias$Yi[1:2,], a, b, we_estadao_noticias)
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras)
palavras %>% map(function(x) paste(x, collapse=""))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
Xi = permutacoes_estadao_noticias$Xi[1:2,]
Yi = permutacoes_estadao_noticias$Yi[1:2,]
modelo = we_estadao_noticias
cols_in_Xi = colnames(Xi)
cols_in_Yi = colnames(Yi)
targets_permuted = bind_cols(Xi, Yi)
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
cols_in_Xi
cols_in_Yi
modelo = we_estadao_noticias
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
palavras %>% map(function(x) print(x))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
palavras %>% map(function(x) print(x))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
palavras %>% map(function(x) score_w(x, a, b, modelo))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% rowwise() %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
a = palavras %>% map(function(x) score_w(x, a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
a = palavras %>% map(function(x) score_w(x, a, b, modelo))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_w <- function(w, a, b, modelo){
print(w)
mean_cosSim = function(w, palavras){
features = tibble(palavras = palavras)
mean = features %>% group_by(palavras) %>%
summarise(cosine = cosSim_model(modelo, w, palavras)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, a)
mean_w_B = mean_cosSim(w, b)
return((mean_w_A - mean_w_B) %>% as.numeric())
}
targets_permuted %>% rowwise() %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% group_by(.dots = c(Xi, Yi)) %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
cosSim_model <- function(modelo, w, col){
print(w)
cosineSimilarity(modelo[[w]], modelo[[col]])
}
score_w <- function(w, a, b, modelo){
mean_cosSim = function(w, palavras){
features = tibble(palavras = palavras)
mean = features %>% group_by(palavras) %>%
summarise(cosine = cosSim_model(modelo, w, palavras)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, a)
mean_w_B = mean_cosSim(w, b)
return((mean_w_A - mean_w_B) %>% as.numeric())
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
a = palavras %>% map(function(x) x %>% rowwise() %>% score_w(., a, b, modelo))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
a = palavras %>% map(function(x) score_w(x, a, b, modelo))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
a = palavras %>% map(function(x) x %>% rowwise() %>% score_w(x =., a, b, modelo))
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
a = palavras %>% map(function(x) x %>% rowwise() %>% score_w(x =., a, b, modelo))
print(a)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
print(palavras)
a = palavras %>% map(function(x) x %>% rowwise() %>% score_w(x =., a, b, modelo))
print(a)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
print(palavras)
a = palavras %>% map(function(x) x %>% group_by(cols_in_Xi) %>% score_w(x =., a, b, modelo))
print(a)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
print(palavras)
a = palavras %>% map(function(x) x %>% score_w(x =., a, b, modelo))
print(a)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#print(palavras)
print(palavras)
a = palavras %>% map(function(x) score_w(x, a, b, modelo))
print(a)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
#sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
