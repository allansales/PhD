y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
permutacoes = permutacao(x, y)
print(permutacoes)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[2:n]
chosen_y = y[2:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
x = c("dilma", "rousseff", "lula", "temer", "michel")
y = c("aécio", "neves", "fhc", "aloysio", "nunes")
a = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
b = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
pares = create_pares(x, y, a, b, we_folha_noticias)
permutacoes_cand_colig = permutacao(x, y)
vies_folha_cand_colig = checa_vies(x, y, a, b, permutacoes_cand_colig, pares$targets_a, pares$targets_b, we_folha_noticias)
vies_estadao_cand_colig = checa_vies(x, y, a, b, permutacoes_cand_colig, pares$targets_a, pares$targets_b, we_estadao_noticias)
vies_folha_cand_colig
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
#we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
# palavras folha
limiar = 0.4425
politicos = define_conjunto("dilma", "aécio", limiar, we_folha_noticias)
dilma_words = politicos$conjunto_1
aecio_words = politicos$conjunto_2
partidos = define_conjunto("estável", "instável", limiar, we_folha_noticias)
estavel_words = partidos$conjunto_1
instavel_words = partidos$conjunto_2
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
print(x)
print(y)
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[2:n]
chosen_y = y[2:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
print(x)
#print(y)
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[2:n]
chosen_y = y[2:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
dilma_words
aecio_words
View(comb)
dilma_words
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
print(x)
#print(y)
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
View(q)
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb[1:10,] %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
View(q)
q = comb[100:114,] %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
View(q)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
#we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
# palavras folha
limiar = 0.4425
politicos = define_conjunto("dilma", "aécio", limiar, we_folha_noticias)
dilma_words = politicos$conjunto_1
aecio_words = politicos$conjunto_2
partidos = define_conjunto("estável", "instável", limiar, we_folha_noticias)
estavel_words = partidos$conjunto_1
instavel_words = partidos$conjunto_2
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores$p_valor)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
View(q)
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores)
}
q = comb %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
from_page <- read_html("https://www.rottentomatoes.com/celebrity/scarlett_johansson/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
library(tidyverse, warn.conflicts = F)
library(rvest)
library(plotly)
library(cluster)
library(ggdendro)
theme_set(theme_light())
source("plota_solucoes_hclust.R")
from_page <- read_html("https://www.rottentomatoes.com/celebrity/scarlett_johansson/") %>%
html_node("#filmographyTbl") %>% # A sintaxe da expressão é de um seletor à lá JQuery: https://rdrr.io/cran/rvest/man/html_nodes.html
html_table(fill=TRUE) %>% # Faz parse
as.tibble()
filmes = from_page %>%
filter(RATING != "No Score Yet",
`BOX OFFICE` != "—",
CREDIT != "Executive Producer") %>%
mutate(RATING = as.numeric(gsub("%", "", RATING)),
`BOX OFFICE` = as.numeric(gsub("[$|M]", "", `BOX OFFICE`))) %>%
filter(`BOX OFFICE` >= 1) # Tem dois filmes que não parecem ter sido lançados no mundo todo
filmes %>%
ggplot(aes(x = "Filmes", y = RATING)) +
geom_jitter(width = .01, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = RATING)) +
geom_histogram(bins = 16) +
geom_rug()
filmes %>%
ggplot(aes(x = "Filmes", y = YEAR)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = `YEAR`)) +
geom_histogram(bins = 17) +
geom_rug()
tibble(a = c(rnorm(100, mean = 10, sd = 10),
rnorm(40, mean = 80, sd = 15))) %>%
ggplot(aes(x = "teste", y = a)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6)
filmes %>%
ggplot(aes(x = "Filmes", y = `BOX OFFICE`)) +
geom_jitter(width = .02, height = 0, size = 2, alpha = .6) +
scale_y_log10()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
geom_rug()
filmes %>%
ggplot(aes(x = `BOX OFFICE`)) +
geom_histogram(bins = 20) +
scale_x_log10() +
geom_rug()
distancias.long = filmes %>%
select(RATING) %>%
dist(method = "euclidean") %>%
as.matrix %>%
reshape2::melt(varnames = c("row", "col"))
distancias.long %>%
ggplot(aes(x = row, y = col, fill = value)) +
geom_tile()
row.names(filmes) = NULL
agrupamento_h = filmes %>%
column_to_rownames("TITLE") %>% # hclust precisa dos rótulos em nomes de linha (ruim)
select(RATING) %>%
dist(method = "euclidian") %>%
hclust(method = "ward.D")
ggdendrogram(agrupamento_h, rotate = T, size = 2)
ggdendrogram(agrupamento_h, rotate = T, size = 2) +
geom_hline(yintercept = 45, colour = "red")
data.frame(k = 1:NROW(agrupamento_h$height),
height = agrupamento_h$height) %>%
ggplot(aes(x = k, y = height)) + \
geom_line(colour = "grey") +
geom_point() +
labs(x = "Junções feitas (34 - clusters)", y = "Dissimilaridade na junção")
solucoes = tibble(k = 1:9)
solucoes
filmes
View(filmes)
atribuicoes = solucoes %>%
group_by(k) %>%
do(cbind(filmes,
grupo = as.character(cutree(agrupamento_h, .$k))))
View(atribuicoes)
agrupamento_h
agrupamento_h
cutree
?cutree
View(comb)
source('~/.active-rstudio-document', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
x = c("dilma", "rousseff", "lula", "temer", "michel")
y = c("aécio", "neves", "fhc", "aloysio", "nunes")
a = c("pt", "pmdb", "psd", "pp", "pr", "pdt", "pros", "pcdob")
b = c("psdb", "sd", "pmn", "pen", "ptn", "ptc", "dem", "ptb")
pares = create_pares(x, y, a, b, we_folha_noticias)
permutacoes_cand_colig = permutacao(x, y)
vies_folha_cand_colig = checa_vies(x, y, a, b, permutacoes_cand_colig, pares$targets_a, pares$targets_b, we_folha_noticias)
vies_estadao_cand_colig = checa_vies(x, y, a, b, permutacoes_cand_colig, pares$targets_a, pares$targets_b, we_estadao_noticias)
vies_folha_cand_colig$valores
is.data.frame(vies_folha_cand_colig$valores)
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
#we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
# palavras folha
limiar = 0.4425
politicos = define_conjunto("dilma", "aécio", limiar, we_folha_noticias)
dilma_words = politicos$conjunto_1
aecio_words = politicos$conjunto_2
partidos = define_conjunto("estável", "instável", limiar, we_folha_noticias)
estavel_words = partidos$conjunto_1
instavel_words = partidos$conjunto_2
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
targets_a = targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
features = get_first_n_words(a, b, feature_size)
vies_candidatos_estabilidade = executa_teste_vies(targets$x, targets$y, features$x, features$y, pares$targets_a, pares$targets_b, modelo)
return(vies_candidatos_estabilidade$valores)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
#q = comb %>% rowwise() %>% mutate(p_valor = filter_targets_features(x, y, a, b, target_size, feature_size, pares, modelo))
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
q = comb[1:10,] %>% do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb[1:10,] %>% do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb[1:10,] %>% rowwise() %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb[1:10,] %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
q = comb %>% rowwise() %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
q = comb %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
#we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/estadao_noticias_eleicao_2014.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_noticias_eleicao_2014.bin")
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
# palavras folha
limiar = 0.4425
politicos = define_conjunto("dilma", "aécio", limiar, we_folha_noticias)
dilma_words = politicos$conjunto_1
aecio_words = politicos$conjunto_2
partidos = define_conjunto("estável", "instável", limiar, we_folha_noticias)
estavel_words = partidos$conjunto_1
instavel_words = partidos$conjunto_2
executa_teste_vies <- function(x, y, a, b, targets_a, targets_b, modelo){
permutacoes = permutacao(x, y)
teste_vies = checa_vies(x, y, a, b, permutacoes, targets_a, targets_b, modelo)
return(teste_vies)
}
get_first_n_words <- function(x, y, n){
chosen_x = x[1:n]
chosen_y = y[1:n]
return(list(x = chosen_x, y = chosen_y))
}
filter_targets_features <- function(x, y, a, b, target_size, feature_size, pares, modelo){
targets = get_first_n_words(x, y, target_size)
x = targets$x
y = targets$y
features = get_first_n_words(a, b, feature_size)
a = features$x
b = features$y
targets_a = pares$targets_a %>% filter((target %in% x || target %in% y) && (feature %in% a))
targets_b = pares$targets_b %>% filter((target %in% x || target %in% y) && (feature %in% b))
vies_candidatos_estabilidade = executa_teste_vies(x, y, a, b, targets_a, targets_b, modelo)
return(vies_candidatos_estabilidade$valores)
}
x = dilma_words
y = aecio_words
a = estavel_words
b = instavel_words
modelo = we_folha_noticias
n_x_y = 2:length(x) #length(x) eh sempre igual a length(y)
n_a_b = 2:length(a) #length(a) eh sempre igual a length(b)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
pares = create_pares(x, y, a, b, modelo)
q = comb %>% group_by(target_size, feature_size) %>%
do(filter_targets_features(x, y, a, b, .$target_size, .$feature_size, pares, modelo))
View(q)
comb = expand.grid(n_x_y, n_a_b) %>% as.data.frame() %>% rename(target_size = Var1, feature_size = Var2)
comb
pares = create_pares(x, y, a, b, modelo)
pares
