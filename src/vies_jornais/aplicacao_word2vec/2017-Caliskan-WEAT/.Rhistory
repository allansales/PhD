score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
print("score_s_w")
scores = palavras %>% map(function(x) score_w(x, a, b, modelo)) %>% unlist() %>% sum()
return(scores)
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_w <- function(w, a, b, modelo){
mean_cosSim = function(w, palavras){
print("score_w")
features = tibble(palavras = palavras)
mean = features %>% group_by(palavras) %>%
summarise(cosine = cosSim_model(modelo, w, palavras)) %>%
summarise(mean = mean(cosine))
return(mean)
}
mean_w_A = mean_cosSim(w, a)
mean_w_B = mean_cosSim(w, b)
return((mean_w_A - mean_w_B) %>% as.numeric())
}
scores = targets_permuted %>% mutate(a(.))
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("wordVectors")
source("weat.R")
we_estadao_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_estadao.bin")
we_folha_noticias = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/eleicoes_2014_folha.bin")
we_folha_comentarios = read.binary.vectors("../word_embeddings/eleicoes_2014/embeddings/folha_comentarios_eleicao_2014.bin")
modelo_contem_palavra <- function(features, targets, modelo){
checa_palavra_em_modelo <- function(w, modelo){
wv = modelo[[w]]
contem = (is.nan(wv[1,1]) == F) #se vetor contem nan, entao nao existe a palavra no modelo
return(contem)
}
ok_a = features %>% group_by(get("A")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("A"), modelo))
ok_b = features %>% group_by(get("B")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("B"), modelo))
ok_x = targets %>% group_by(get("X")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("X"), modelo))
ok_y = targets %>% group_by(get("Y")) %>% summarise(palavras_do_modelo = checa_palavra_em_modelo(get("Y"), modelo))
all_true_a = (ok_a %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_a %>% distinct(palavras_do_modelo) == T)
if(!all_true_a){
print(ok_a)
}
all_true_b = (ok_b %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_b %>% distinct(palavras_do_modelo) == T)
if(!all_true_b){
print(ok_b)
}
all_true_x = (ok_x %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_x %>% distinct(palavras_do_modelo) == T)
if(!all_true_x){
print(ok_x)
}
all_true_y = (ok_y %>% distinct(palavras_do_modelo) %>% nrow() == 1 && ok_y %>% distinct(palavras_do_modelo) == T)
if(!all_true_y){
print(ok_y)
}
all_true = ((all_true_a && all_true_b) && (all_true_x && all_true_y))
return(all_true)
}
potal_contem_palavras <- function(x, y, a, b){
targets = data_frame(X = x, Y = y)
features = data_frame(A = a, B = b)
print(modelo_contem_palavra(features, targets, we_estadao_noticias))
print(modelo_contem_palavra(features, targets, we_folha_noticias))
print(modelo_contem_palavra(features, targets, we_folha_comentarios))
}
calcula_scores_portais <- function(x, y, a, b){
permutacoes = permutacao(x, y)
score_Xi_Yi_estadao_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_estadao_noticias)
score_Xi_Yi_folha_noticias = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_folha_noticias)
score_Xi_Yi_folha_comentarios = score_permutacoes(permutacoes$Xi, permutacoes$Yi, a, b, we_folha_comentarios)
scores = bind_cols(permutacoes$Xi, permutacoes$Yi, score_estadao = score_Xi_Yi_estadao_noticias, score_folha = score_Xi_Yi_folha_noticias, score_folha_comentarios = score_Xi_Yi_folha_comentarios)
return(scores)
}
execute <- function(x, y, a, b){
scores = calcula_scores_portais(x, y, a, b)
score_X_Y_estadao_noticias = score_targets(x, y, a, b, we_estadao_noticias)
p_estadao = pvalor(scores$score_estadao, score_X_Y_estadao_noticias)
e_estadao = effect_size(x, y, a, b, we_estadao_noticias)
score_X_Y_folha_noticias = score_targets(x, y, a, b, we_folha_noticias)
p_folhan = pvalor(scores$score_folha, score_X_Y_folha_noticias)
e_folhan = effect_size(x, y, a, b, we_folha_noticias)
score_X_Y_folha_comentarios = score_targets(x, y, a, b, we_folha_comentarios)
p_folhac = pvalor(scores$score_folha_comentarios, score_X_Y_folha_comentarios)
e_folhac = effect_size(x, y, a, b, we_folha_comentarios)
valores = data_frame(fonte = c("Noticias estadao", "Noticias folha", "Comentarios folha"), p_valor = c(p_estadao, p_folhan, p_folhac), tam_efeito = c(e_estadao, e_folhan, e_folhac))
return(list(valores = valores, scores = scores))
}
x = c("dilma", "rousseff", "luciana", "genro", "marina", "silva")
y = c("aécio", "neves", "eduardo", "jorge", "levy", "fidelix")
a = c("pt", "psb", "psd", "pdt", "pps", "pcdob", "pcdob","psol")
b = c("pp", "pr", "prb", "pros", "prtb", "phs", "pen", "dem")
potal_contem_palavras(x, y, a, b)
genero_posicao = execute(x, y, a, b)
genero_posicao$valores
load("~/GitHub/PhD/src/vies_jornais/aplicacao_word2vec/vieses_em_comentarios/workspace_vies_comentarios.RData")
cosSim_model <- function(w1, w2, modelo){
cosineSimilarity(modelo[[w1]],modelo[[w2]]) %>% as.numeric()
}
similarity_table <- function(x, y, a, b, modelo){
targets = c(x, y)
features = c(a, b)
pares = expand.grid(target = targets, feature = features)
pares$target = pares$target %>% as.character()
pares$feature = pares$feature %>% as.character()
pares %>%
rowwise() %>%
mutate(cos_sim = cosSim_model(target, feature, modelo))
}
y
permutacao_table = permutacao(x, y)
x
permutacao_table = permutacao(x, y)
library("dplyr")
library("wordVectors")
library("partitions")
cosSim_model <- function(w1, w2, modelo){
cosineSimilarity(modelo[[w1]],modelo[[w2]]) %>% as.numeric()
}
similarity_table <- function(x, y, a, b, modelo){
targets = c(x, y)
features = c(a, b)
pares = expand.grid(target = targets, feature = features)
pares$target = pares$target %>% as.character()
pares$feature = pares$feature %>% as.character()
pares %>%
rowwise() %>%
mutate(cos_sim = cosSim_model(target, feature, modelo))
}
permutacao_table = permutacao(x, y)
library("purrr")
library("gtools")
permutacao_table = permutacao(x, y)
cosSim_model <- function(w1, w2, modelo){
cosineSimilarity(modelo[[w1]],modelo[[w2]]) %>% as.numeric()
}
similarity_table <- function(x, y, a, b, modelo){
targets = c(x, y)
features = c(a, b)
pares = expand.grid(target = targets, feature = features)
pares$target = pares$target %>% as.character()
pares$feature = pares$feature %>% as.character()
pares %>%
rowwise() %>%
mutate(cos_sim = cosSim_model(target, feature, modelo))
}
permutacao_table = permutacao(x, y)
get_sim_by_target_feature <- function(sim_table, w_target, w_feature){
sim_table[sim_table$target == w_target & sim_table$feature == w_feature, "cos_sim"] %>% as.numeric()
}
permutacao_table
sim_table = similarity_table(x, y, a, b, folha_up_down)
View(sim_table)
View(sim_table)
load("~/workspace/PhD/src/vies_jornais/aplicacao_word2vec/vieses_em_comentarios/workspace_vies_comentarios.RData")
knitr::opts_chunk$set(echo = TRUE)
source("../2017-Caliskan-WEAT/weat.R")
library(wordVectors)
x = c("a?cio", "neves", "fhc", "psdb", "aloysio")
y = c("dilma", "rousseff", "lula", "pt", "temer")
x = c("aécio", "neves", "fhc", "psdb", "aloysio")
y = c("dilma", "rousseff", "lula", "pt", "temer")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "doença", "acidente", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
library("dplyr")
library("wordVectors")
library("partitions")
library("gtools")
library("purrr")
cosSim_model <- function(w1, w2, modelo){
cosineSimilarity(modelo[[w1]],modelo[[w2]]) %>% as.numeric()
}
similarity_table <- function(x, y, a, b, modelo){
targets = c(x, y)
features = c(a, b)
pares = expand.grid(target = targets, feature = features)
pares$target = pares$target %>% as.character()
pares$feature = pares$feature %>% as.character()
pares %>%
rowwise() %>%
mutate(cos_sim = cosSim_model(target, feature, modelo))
}
get_sim_by_target_feature <- function(sim_table, w_target, w_feature){
sim_table[sim_table$target == w_target & sim_table$feature == w_feature, "cos_sim"] %>% as.numeric()
}
sim_table = similarity_table(x, y, a, b, folha_up_down)
View(sim_table)
permutacao_table = permutacao(x, y)
permutacao <- function(x, y){
remove_repeated_sets = function(Xi, Yi){
duplicados = duplicated(Yi)
Xi = Xi[!duplicados,]
Yi = Yi[!duplicados,]
return(list(Xi = Xi, Yi = Yi))
}
all_targets = c(x,y)
n = length(all_targets)
Xi = permutations(n=n, r=n/2, v=all_targets) %>% as.data.frame()
colnames(Xi) = paste("X",colnames(Xi),sep = "")
Yi = Xi %>% apply(1, FUN=function(x){
setdiff(all_targets, x)
}) %>% t() %>% as.data.frame()
colnames(Yi) = paste("Y",colnames(Yi),sep = "")
return(remove_repeated_sets(Xi, Yi))
}
permutacao_table = permutacao(x, y)
permutacao_table$Xi
b
a
set_table
set_table = permutacao_table$Xi
sim_table
subset = function(set, sim_table){
sim_table %>% filter(target %in% set)
}
permutacao_table %>% rowwise() %>% subset(sim_table)
permutacao_table %>% rowwise()
permutacao_table
permutacao_table %>% rowwise() %>% summarise(c(XV1, XV2), subset(sim_table))
permutacao_table %>% as_data_frame() %>% rowwise() %>% summarise(c(XV1, XV2), subset(sim_table))
permutacao_table %>% as_data_frame() %>% rowwise()
set_table %>% rowwise()
set_table %>% rowwise() %>% summarise(c(XV1, XV2), subset(sim_table))
set_table %>% rowwise() %>% summarise(XV1, subset(sim_table))
subset = function(set, sim_table){
sim_table %>% filter(target %in% set)
}
set_table %>% rowwise() %>% summarise(subset(XV1, sim_table))
set_table %>% rowwise() %>% subset(XV1, sim_table)
set_table %>% rowwise() %>% subset(., sim_table)
subset = function(set, sim_table){
print(set)
sim_table %>% filter(target %in% set)
}
set_table %>% rowwise() %>% subset(., sim_table)
subset = function(set, sim_table){
print(set)
sim_table %>% filter(target %in% set)
}
a = set_table %>% rowwise() %>% subset(., sim_table)
View(a)
sim_table
?subset
a = set_table %>% rowwise() %>% summarise(subset(., sim_table))
subset = function(set, sim_table){
print
sim_table %>% filter(target %in% set)
}
subset = function(set, sim_table){
print(set)
sim_table %>% filter(target %in% set)
}
set_table %>% apply(1, subset, sim_table)
subset = function(set, sim_table){
sim_table %>% filter(target %in% set)
}
set_table %>% apply(1, subset, sim_table)
subset = function(set, sim_table){
print(set)
sim_table %>% filter(target %in% set)
}
set_table %>% apply(1, subset, sim_table)
a = set_table %>% apply(1, subset, sim_table)
a[[1]]
a1 = a[[1]]
View(a1)
a252 = a[[252]]
View(a252)
x = c("aécio", "neves", "fhc", "psdb", "aloysio")
y = c("dilma", "rousseff", "lula", "pt", "temer")
a = c("carinho", "liberdade", "saúde", "amor", "paz", "alegria", "fiel", "honesto", "sorte", "diploma", "presente", "honra", "família", "feliz", "férias")
b = c("abuso", "quebra", "doença", "acidente", "sofrimento", "assalto", "desastre", "ódio", "tragédia", "cadeia", "pobreza", "feio", "câncer", "morte", "prisão")
View(a1)
subsets = set_table %>% apply(1, subset, sim_table)
subsets
subsets[[1]]
subsets1 = subsets[[1]]
View(subsets1)
subset = function(set, sim_table, a, b){
set_a = sim_table %>% filter(target %in% set & feature %in% a)
}
subsets = set_table %>% apply(1, subset, sim_table)
a
subset = function(set, sim_table, a, b){
set_a = sim_table %>% filter(target %in% set & feature %in% a)
}
subset = function(set, sim_table, a, b){
set_a = sim_table %>% filter(target %in% set & feature %in% a)
}
subsets = set_table %>% apply(1, subset, sim_table, a, b)
subsets1 = subsets[[1]]
View(subsets1)
a
View(subsets1)
subset = function(set, sim_table, a, b){
set_a = sim_table %>% filter(target %in% set & feature %in% a)
set_a %>% group_by(target) %>% summarise(mean_score = mean())
}
subsets = set_table %>% apply(1, subset, sim_table, a, b)
subset = function(set, sim_table, a, b){
set_a = sim_table %>% filter(target %in% set & feature %in% a)
set_a %>% group_by(target) %>% summarise(mean_score = mean(cos_sim))
}
subsets = set_table %>% apply(1, subset, sim_table, a, b)
warnings()
subsets
subsets = set_table %>% apply(1, subset, sim_table, a, b)
subsets = set_table %>% apply(1, subset, sim_table, a, b)
subsets = set_table %>% apply(1, subset, sim_table, a, b)
View(sim_table)
similarity_table <- function(x, y, a, b, modelo){
targets = c(x, y)
features = c(a, b)
pares = expand.grid(target = targets, feature = features)
pares$target = pares$target %>% as.character()
pares$feature = pares$feature %>% as.character()
pares = pares %>%
rowwise() %>%
mutate(cos_sim = cosSim_model(target, feature, modelo))
targets_a = pares %>% filter(feature %in% a)
targets_b = pares %>% filter(feature %in% b)
return(list(targets_a = targets_a, targets_b = targets_b))
}
sim_table = similarity_table(x, y, a, b, folha_up_down)
targets_a = sim_table$targets_a
targets_b = sim_table$targets_b
View(targets_a)
View(targets_b)
View(targets_a)
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim))
View(w_sim_a)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim))
View(w_sim_b)
View(w_sim_a)
View(w_sim_a)
View(w_sim_b)
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
View(w_sim_a)
View(w_sim_b)
bind_rows(w_sim_a, w_sim_b)
bind_cols(w_sim_a, w_sim_b)
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos_a = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos_b = mean(cos_sim)) %>% arrange(target)
View(w_sim_a)
View(w_sim_b)
bind_cols(w_sim_a, w_sim_b %>% select(mean_cos_b))
w_sim_a %>% select(mean_cos_a) - w_sim_b %>% select(mean_cos_b)
w_sim_a_b = w_sim_a %>% select(mean_cos_a) - w_sim_b %>% select(mean_cos_b)
View(w_sim_a_b)
w_sim_a_b = bind_cols(w_sim_a %>% select(target),
w_sim_a %>% select(mean_cos_a) -
w_sim_b %>% select(mean_cos_b))
View(w_sim_a_b)
View(w_sim_a)
View(w_sim_b)
0.09573528-0.06435619
modelo = folha_up_down
modelo = folha_up
sim_table = similarity_table(x, y, a, b, modelo)
targets_a = sim_table$targets_a
targets_b = sim_table$targets_b
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos_a = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos_b = mean(cos_sim)) %>% arrange(target)
w_sim_a_b = bind_cols(w_sim_a %>% select(target),
w_sim_a %>% select(mean_cos_a) -
w_sim_b %>% select(mean_cos_b))
View(w_sim_a_b)
View(w_sim_a_b)
w_sim_a_b = bind_cols(w_sim_a %>% select(target), mean_cos =
(w_sim_a %>% select(mean_cos_a) -
w_sim_b %>% select(mean_cos_b)))
View(w_sim_a_b)
w_sim_a_b = bind_cols(w_sim_a %>% select(target), w_sim =
(w_sim_a %>% select(mean_cos_a) -
w_sim_b %>% select(mean_cos_b)))
View(w_sim_a_b)
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_a_b = bind_cols(w_sim_a %>% select(target), mean_cos =
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
View(w_sim_a_b)
w_sim_a_b = bind_cols(w_sim_a %>% select(target),
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
View(w_sim_a_b)
w_sim_a_b = bind_cols(w_sim_a %>% select(target), #poderia usar w_sim_b. as duas terao a mesma ordem
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
permutacao_table = permutacao(x, y)
permutacao_table$Xi
View(set_table)
set_table = permutacao_table$Xi
w_dif_a_b = bind_cols(w_sim_a %>% select(target), #poderia usar w_sim_b. as duas terao a mesma ordem
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
View(w_dif_a_b)
sum_w_sim <- function(words_set, w_dif_a_b){
w_dif_a_b %>% filter(target)
}
words_set
sum_w_sim <- function(words_set, w_dif_a_b){
w_dif_a_b %>% filter(target %in% words_set) %>% summarise(sum_sim = sum(mean_cos)) %>% as.numeric()
}
set_table %>% apply(1, sum_w_sim)
set_table %>% apply(1, sum_w_sim, w_dif_a_b)
score_Xi = set_table %>% apply(1, sum_w_sim, w_dif_a_b)
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
permutacao_table$Xi[1,]
score_Xi[1]
w_dif_a_b
0.012498922 + 0.023462780 + 0.014266845 + 0.029088292 + 0.034134573
permutacao_table$Xi[252,]
score_Xi[252]
0.013661509 -0.012661795 -0.005197062 -0.002107642 + 0.017782288
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
permutacao_table$Yi[1,]
permutacao_table$Xi[1,]
score_Xi = permutacao_table$Xi %>% summarise(score = sum_w_sim(., w_dif_a_b))
score_Xi
permutacao_table$Xi
score_Xi = permutacao_table$Xi %>% summarise(score = sum_w_sim(., w_dif_a_b))
score_Xi
score_Xi = permutacao_table$Xi %>% rowwise(score = sum_w_sim(., w_dif_a_b))
score_Xi = permutacao_table$Xi %>% rowwise() %>% mutate(score = sum_w_sim(.,w_dif_a_b))
score_Xi
?exists
score_Xi = permutacao_table$Xi %>% apply(1, sum_w_sim, w_dif_a_b)
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
score_Yi
score_Xi_Yi = score_Xi - score_Yi
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi, score_Xi_Yi)
permutation_scores = bind_rows(permutacao_table$Xi, permutacao_table$Yi, score_Xi_Yi)
View(permutation_scores)
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi)
View(permutation_scores)
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi, score = score_Xi_Yi)
View(permutation_scores)
modelo = folha_down
sim_table = similarity_table(x, y, a, b, modelo)
targets_a = sim_table$targets_a
targets_b = sim_table$targets_b
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_dif_a_b = bind_cols(w_sim_a %>% select(target), #poderia usar w_sim_b. as duas terao a mesma ordem
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
sum_w_sim <- function(words_set, w_dif_a_b){
w_dif_a_b %>% filter(target %in% words_set) %>% summarise(sum_sim = sum(mean_cos)) %>% as.numeric()
}
permutacao_table = permutacao(x, y)
score_Xi = permutacao_table$Xi %>% apply(1, sum_w_sim, w_dif_a_b)
#score_Xi = permutacao_table$Xi %>% rowwise() %>% mutate(score = sum_w_sim(.,w_dif_a_b))
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
#score_Yi = permutacao_table$Yi %>% rowwise() %>% mutate(score = sum_w_sim(.,w_dif_a_b))
score_Xi_Yi = score_Xi - score_Yi
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi, score = score_Xi_Yi)
View(permutation_scores)
modelo = folha_up_down
sim_table = similarity_table(x, y, a, b, modelo)
targets_a = sim_table$targets_a
targets_b = sim_table$targets_b
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_dif_a_b = bind_cols(w_sim_a %>% select(target), #poderia usar w_sim_b. as duas terao a mesma ordem
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
sum_w_sim <- function(words_set, w_dif_a_b){
w_dif_a_b %>% filter(target %in% words_set) %>% summarise(sum_sim = sum(mean_cos)) %>% as.numeric()
}
permutacao_table = permutacao(x, y)
score_Xi = permutacao_table$Xi %>% apply(1, sum_w_sim, w_dif_a_b)
#score_Xi = permutacao_table$Xi %>% rowwise() %>% mutate(score = sum_w_sim(.,w_dif_a_b))
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
#score_Yi = permutacao_table$Yi %>% rowwise() %>% mutate(score = sum_w_sim(.,w_dif_a_b))
score_Xi_Yi = score_Xi - score_Yi
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi, score = score_Xi_Yi)
View(permutation_scores)
permutacao_table = permutacao(x, y)
sim_table = similarity_table(x, y, a, b, modelo)
knitr::opts_chunk$set(echo = TRUE)
source("../2017-Caliskan-WEAT/weat2.R")
library(wordVectors)
folha_up = read.binary.vectors("../word_embeddings/vieses_em_comentarios/embeddings/folha_thumbs_up.bin")
x = c("dilma", "genro", "marina", "marta", "erundina", "rosário")
y = c("aécio", "lula", "fhc", "cunha", "temer", "bolsonaro")
a = c("pt", "psb", "psd", "pdt", "pps", "pcdob", "psol")
b = c("pp", "pr", "prb", "pros", "phs", "pen", "dem")
sim_table = similarity_table(x, y, a, b, modelo)
modelo = folha_up
sim_table = similarity_table(x, y, a, b, modelo)
permutacao_table = permutacao(x, y)
targets_a = sim_table$targets_a
targets_b = sim_table$targets_b
targets_b
w_sim_a = targets_a %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b = targets_b %>% group_by(target) %>% summarise(mean_cos = mean(cos_sim)) %>% arrange(target)
w_sim_b
w_dif_a_b = bind_cols(w_sim_a %>% select(target), #poderia usar w_sim_b. as duas terao a mesma ordem
(w_sim_a %>% select(mean_cos) -
w_sim_b %>% select(mean_cos)))
sum_w_sim <- function(words_set, w_dif_a_b){
w_dif_a_b %>% filter(target %in% words_set) %>% summarise(sum_sim = sum(mean_cos)) %>% as.numeric()
}
score_Xi = permutacao_table$Xi %>% apply(1, sum_w_sim, w_dif_a_b)
score_Yi = permutacao_table$Yi %>% apply(1, sum_w_sim, w_dif_a_b)
score_Xi_Yi = score_Xi - score_Yi
score_Xi_Yi = score_Xi - score_Yi
permutation_scores = bind_cols(permutacao_table$Xi, permutacao_table$Yi, score = score_Xi_Yi)
View(permutation_scores)
