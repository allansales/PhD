sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras[1,])
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras[3,])
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% rowwise() %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
?summarise_all
by_species <- iris %>% group_by(Species)
by_species
by_species %>% summarise_all(funs(med = median))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#targets = tibble(palavras = palavras)
palavras %>%
summarise_all(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#targets = tibble(palavras = palavras)
palavras %>%
summarise_all(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#targets = tibble(palavras = palavras)
palavras %>%
summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
#targets = tibble(palavras = palavras)
palavras %>%
summarise_all(s_w = score_w(palavras, a, b, modelo))
#%>% summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
print(is.data.frame(palavras))
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
print(is.data.frame(palavras))
print(palavras)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
df=data.frame(
x1=c(1,0,0,NA,0,1,1,NA,0,1),
x2=c(1,1,NA,1,1,0,NA,NA,0,1),
x3=c(0,1,0,1,1,0,NA,NA,0,1),
x4=c(1,0,NA,1,0,0,NA,0,0,1),
x5=c(1,1,NA,1,1,1,NA,1,0,1))
df %>%
replace(is.na(.), 0) %>%
summarise_each(funs(sum))
df
df=tibble(
x1=c(1,0,0,NA,0,1,1,NA,0,1),
x2=c(1,1,NA,1,1,0,NA,NA,0,1),
x3=c(0,1,0,1,1,0,NA,NA,0,1),
x4=c(1,0,NA,1,0,0,NA,0,0,1),
x5=c(1,1,NA,1,1,1,NA,1,0,1))
df %>%
replace(is.na(.), 0) %>%
summarise_each(funs(sum))
df=data.frame(
x1=c(1,0,0,NA,0,1,1,NA,0,1),
x2=c(1,1,NA,1,1,0,NA,NA,0,1),
x3=c(0,1,0,1,1,0,NA,NA,0,1),
x4=c(1,0,NA,1,0,0,NA,0,0,1),
x5=c(1,1,NA,1,1,1,NA,1,0,1))
df %>%
replace(is.na(.), 0) %>%
summarise_each(funs(sum))
df=tibble(
x1=c(1,0,0,NA,0,1,1,NA,0,1),
x2=c(1,1,NA,1,1,0,NA,NA,0,1),
x3=c(0,1,0,1,1,0,NA,NA,0,1),
x4=c(1,0,NA,1,0,0,NA,0,0,1),
x5=c(1,1,NA,1,1,1,NA,1,0,1))
df %>%
replace(is.na(.), 0) %>%
summarise_each(funs(sum))
df %>%
summarise_each(funs(sum))
df=tibble(
x1=c(1,0,0,1,0,1,1,1,0,1),
x2=c(1,1,1,1,1,0,1,1,0,1),
x3=c(0,1,0,1,1,0,1,1,0,1),
x4=c(1,0,1,1,0,0,1,0,0,1),
x5=c(1,1,1,1,1,1,1,1,0,1))
df %>%
summarise_each(funs(sum))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
print(is.data.frame(palavras))
print(palavras)
score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(.dots = cols_in_Xi, c("a","b","c","d"), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(.dots = cols_in_Xi, y = c("a","b","c","d"), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(x = c(.dots = cols_in_Xi), y = c("a","b","c","d"), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(x = cols_in_Xi, y = c("a","b","c","d"), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(x = cols_in_Xi, y = cols_in_Yi, a, b, modelo))
targets_permuted %>% mutate(score = score_targets(V1, V2, a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
print(is.data.frame(palavras))
print(palavras)
score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(V1, V2, a, b, modelo))
targets_permuted %>% mutate(score = score_targets(XV1, XV2, a, b, modelo))
targets_permuted %>% mutate(score = score_targets(XV1, XV5, a, b, modelo))
score_targets <- function(x, y, a, b, modelo){
sum_s_w = function(palavras){
#print(is.data.frame(palavras))
print(palavras)
#score_w(w)
#targets = tibble(palavras = palavras)
#palavras %>%
#  summarise(s_w = score_w(palavras, a, b, modelo)) %>%
#  summarise(s = sum(s_w))
}
sum_w_X = sum_s_w(x)
sum_w_Y = sum_s_w(y)
return(sum_w_X - sum_w_Y)
}
targets_permuted %>% mutate(score = score_targets(XV1, XV5, a, b, modelo))
targets_permuted %>% mutate(score = score_targets(XV1, YV1, a, b, modelo))
Xi
targets_permuted %>% mutate(score = score_targets(c(XV1, XV2), YV1, a, b, modelo))
targets_permuted %>% mutate(score = score_targets(select_(., .dots = cols_in_Xi), select_(., .dots = cols_in_Yi), a, b, modelo))
targets_permuted %>% mutate(score = score_targets(c(XV1, XV2), YV1, a, b, modelo))
1:10 %>%
map(function(x) rnorm(10, x))
source("../utils/mongo_utils.R")
setwd("~/workspace/PhD/src/vies_jornais/aplicacao_word2vec/word_embeddings")
source("../utils/mongo_utils.R")
source("../utils/utils.R")
source("../utils/embeddings_utils.R")
library("wordVectors")
library("readr")
noticias <- get_todas_noticias_processadas()
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
diretorio_saida = "saida_distancia_partidos/word_embeddings_configuracoes/eleicoes_2014"
train_file <- paste(diretorio_saida,".csv",sep="")
binary_file <- paste(diretorio_saida,".bin",sep="")
analogias <- c("pt psdb dilma", "pt pv dilma","pt prtb dilma","pt psol dilma","pt psb dilma","pt psdc dilma","psdb pv aécio","psdb prtb aécio","psdb psol aécio","psdb psb aécio","psdb psdc aécio","pv prtb jorge","pv psol jorge","pv psb jorge","pv psdc jorge","prtb psol fidelix","prtb psb fidelix","prtb psdc fidelix","psol psb luciana","psol psdc luciana","psb psdc marina","dilma aécio rousseff","campos psb aécio","pt psdb petista")
respostas <- c("aécio","jorge","fidelix","luciana","marina","eymael","jorge","fidelix","luciana","marina","eymael","fidelix","luciana","marina","eymael","luciana","marina","eymael","marina","eymael","eymael","neves","psdb","tucano")
data_fim <- c("2014-12-31","2014-10-26")
data_inicio <- c("2014-05-30","2014-01-01")
n_layers <- c(100,200,300,400)
?word2vec
dados <- c("noticias_folha")#"noticias_estadao",
data_fim <- c("2014-12-31","2014-10-26")
data_inicio <- c("2014-05-30","2014-01-01")
n_layers <- c(100,200,300,400)
method <- c(0)#,1
confs <- expand.grid(dados = dados, data_inicio = data_inicio, data_fim = data_fim,  n_layers = n_layers, method = method)
filter_noticias_por_data <- function(dados, data_inicio, data_fim){
noticias = get(dados) %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo")
return(noticias)
}
treina_modelo <- function(train_file, noticias, n_layers, method = 0){ # method 0 = skip-gram, 1 = bag of words
noticias %>% select(conteudo_processado) %>% write_csv(train_file)
train_word2vec(train_file, threads = 8, cbow = method, vectors = n_layers)
}
acuracia_analogias <- function(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method){
noticias = filter_noticias_por_data(dados, data_inicio, data_fim)
modelo = treina_modelo(train_file, noticias, n_layers, method)
analogias = verifica_analogias(binary_file, analogias, respostas)
return(analogias$acuracia)
}
run <- function(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method){
dados = dados %>% as.character()
data_inicio = data_inicio %>% as.character()
data_fim = data_fim %>% as.character()
acc = acuracia_analogias(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method)
return(acc)
}
conf_acuracia_estadao_3_4 <- confs %>% filter(dados == "noticias_estadao", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
confs <- expand.grid(dados = dados, data_inicio = data_inicio, data_fim = data_fim,  n_layers = n_layers, method = method)
confs
conf_acuracia_estadao_3_4 <- confs %>% filter(dados == "noticias_estadao", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
source("../utils/mongo_utils.R")
source("../utils/utils.R")
source("../utils/embeddings_utils.R")
library("wordVectors")
library("readr")
### Importa base de dados
noticias <- get_todas_noticias_processadas()
noticias_estadao <- noticias %>% filter(subFonte == "ESTADAO")
noticias_folha <- noticias %>% filter(subFonte == "FOLHASP")
noticias_g1 <- noticias %>% filter(subFonte == "G1")
### Noticias eleicao
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
# definicao dos diretorios
diretorio_saida = "saida_distancia_partidos/word_embeddings_configuracoes/eleicoes_2014"
train_file <- paste(diretorio_saida,".csv",sep="")
binary_file <- paste(diretorio_saida,".bin",sep="")
analogias <- c("pt psdb dilma", "pt pv dilma","pt prtb dilma","pt psol dilma","pt psb dilma","pt psdc dilma","psdb pv aécio","psdb prtb aécio","psdb psol aécio","psdb psb aécio","psdb psdc aécio","pv prtb jorge","pv psol jorge","pv psb jorge","pv psdc jorge","prtb psol fidelix","prtb psb fidelix","prtb psdc fidelix","psol psb luciana","psol psdc luciana","psb psdc marina","dilma aécio rousseff","campos psb aécio","pt psdb petista")
respostas <- c("aécio","jorge","fidelix","luciana","marina","eymael","jorge","fidelix","luciana","marina","eymael","fidelix","luciana","marina","eymael","luciana","marina","eymael","marina","eymael","eymael","neves","psdb","tucano")
### data drame com todas as configuracoes de embeddings
dados <- c("noticias_folha")#"noticias_estadao",
data_fim <- c("2014-12-31","2014-10-26")
data_inicio <- c("2014-05-30","2014-01-01")
n_layers <- c(100,200,300,400)
method <- c(0)#,1
confs <- expand.grid(dados = dados, data_inicio = data_inicio, data_fim = data_fim,  n_layers = n_layers, method = method)
filter_noticias_por_data <- function(dados, data_inicio, data_fim){
noticias = get(dados) %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo")
return(noticias)
}
treina_modelo <- function(train_file, noticias, n_layers, method = 0){ # method 0 = skip-gram, 1 = bag of words
noticias %>% select(conteudo_processado) %>% write_csv(train_file)
train_word2vec(train_file, threads = 8, cbow = method, vectors = n_layers)
}
acuracia_analogias <- function(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method){
noticias = filter_noticias_por_data(dados, data_inicio, data_fim)
modelo = treina_modelo(train_file, noticias, n_layers, method)
analogias = verifica_analogias(binary_file, analogias, respostas)
return(analogias$acuracia)
}
run <- function(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method){
dados = dados %>% as.character()
data_inicio = data_inicio %>% as.character()
data_fim = data_fim %>% as.character()
acc = acuracia_analogias(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method)
return(acc)
}
conf_acuracia_estadao_3_4 <- confs %>% filter(dados == "noticias_estadao", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
conf_acuracia_estadao_3_4 <- confs %>% filter(dados == "noticias_estadao", n_layers %in% c(300, 400), method == 0)
conf_acuracia_estadao_3_4
conf_acuracia_folha_3_4 <- confs %>% filter(dados == "noticias_folha", n_layers %in% c(300, 400), method == 0)
conf_acuracia_folha_3_4
conf_acuracia_folha_3_4 <- confs %>% filter(dados == "noticias_folha", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
conf_acuracia_folha_3_4 <- confs %>% filter(dados == "noticias_folha", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
diretorio_saida = "eleicoes_2014/embeddings/"
conf_acuracia_folha_3_4 <- confs %>% filter(dados == "noticias_folha", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
# definicao dos diretorios
diretorio_saida = "eleicoes_2014/embeddings/"
train_file <- paste(diretorio_saida,".csv",sep="")
binary_file <- paste(diretorio_saida,".bin",sep="")
analogias <- c("pt psdb dilma", "pt pv dilma","pt prtb dilma","pt psol dilma","pt psb dilma","pt psdc dilma","psdb pv aécio","psdb prtb aécio","psdb psol aécio","psdb psb aécio","psdb psdc aécio","pv prtb jorge","pv psol jorge","pv psb jorge","pv psdc jorge","prtb psol fidelix","prtb psb fidelix","prtb psdc fidelix","psol psb luciana","psol psdc luciana","psb psdc marina","dilma aécio rousseff","campos psb aécio","pt psdb petista")
respostas <- c("aécio","jorge","fidelix","luciana","marina","eymael","jorge","fidelix","luciana","marina","eymael","fidelix","luciana","marina","eymael","luciana","marina","eymael","marina","eymael","eymael","neves","psdb","tucano")
### data drame com todas as configuracoes de embeddings
dados <- c("noticias_folha")#"noticias_estadao",
data_fim <- c("2014-12-31","2014-10-26")
data_inicio <- c("2014-05-30","2014-01-01")
n_layers <- c(100,200,300,400)
method <- c(0)#,1
confs <- expand.grid(dados = dados, data_inicio = data_inicio, data_fim = data_fim,  n_layers = n_layers, method = method)
conf_acuracia_folha_3_4 <- confs %>% filter(dados == "noticias_folha", n_layers %in% c(300, 400), method == 0) %>% rowwise() %>% mutate(acuracia = run(dados, data_inicio, data_fim, n_layers, train_file, binary_file, analogias, respostas, method))
write_csv(conf_acuracia_folha_3_4, "acuracia_configuracao_embeddings/acuracia_configuracao_folha_300_400.csv")
conf_acuracia_folha_3_4
write_csv(conf_acuracia_folha_3_4, "eleicoes_2014/acuracia_configuracao_embeddings/acuracia_configuracao_folha_300_400.csv")
source("../../utils/mongo_utils.R")
source("../../../utils/mongo_utils.R")
setwd("~/workspace/PhD/src/vies_jornais/aplicacao_word2vec/word_embeddings/comentarios_noticias_eleicoes_2014")
source("../../utils/mongo_utils.R")
source("../../utils/utils.R")
source("../../utils/embeddings_utils.R")
source("../cria_word_embedding.R")
library("wordVectors")
library("readr")
noticias_folha <- get_collection("noticiasFolhaProcessadas")
noticias_folha <- get_collection("folhaNoticiasProcessadas")
source("../../word_embeddings/cria_word_embedding.R")
source("../../utils/mongo_utils.R")
source("../../utils/utils.R")
source("busca_top_rated_comentarios.R")
data_inicio = "2014-01-01"
data_fim = "2014-12-31"
path_saida = "embeddings/"
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
noticias <- get_todas_noticias_processadas()
id_noticias_folha <- get_collection("folhaNoticiasProcessadas")
View(id_noticias_folha)
rm(id_noticias_folha)
noticias_folha <- get_collection("folhaNoticiasProcessadas")
noticias_folha <- get_collection("folhaNoticiasProcessadas") %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo") %>% select(idNoticia)
comentarios_folha = get_collection("folhaComentariosProcessados") %>% filter(idNoticia %in% id_noticias_folha$idNoticia)
comentarios_folha = get_collection("folhaComentariosProcessados") %>% filter(idNoticia %in% noticias_folha$idNoticia)
View(noticias_folha)
noticias_folha <- get_collection("folhaNoticiasProcessadas") %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo")
View(noticias_folha)
View(noticias_folha)
View(noticias_folha)
noticias_folha <- get_collection("folhaNoticiasProcessadas") %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo") %>% select(conteudo = conteudo_processado, idNoticia)
View(comentarios_folha)
comentarios_folha = get_collection("folhaComentariosProcessados") %>% filter(idNoticia %in% noticias_folha$idNoticia) %>% select(conteudo = comentario_processado, idNoticia)
conteudo = noticias_folha %>% bind_cols(comentarios_folha)
conteudo = noticias_folha %>% bind_rows(comentarios_folha)
View(conteudo)
tema = "folha_noticias_comentarios"
modelo_folha_top = cria_word_embedding(tema = tema, n_layers = 300, noticias = conteudo, analogias = NULL, texto_col = "conteudo", path_saida = path_saida)
modelo_noticia_comentario = modelo_folha_top
rm(modelo_folha_top)
modelo_noticia_comentario = cria_word_embedding(tema = tema, n_layers = 300, noticias = conteudo, analogias = NULL, texto_col = "conteudo", path_saida = path_saida)
modelo_noticia_comentario
we_modelo_noticia_comentario = modelo_noticia_comentario[[1]]
we_modelo_noticia_comentario
library("wordVector")
library("wordVectors")
we_noticia_comentario = read.binary.vectors("embeddings/folha_noticias_comentarios.bin")
wordVectors::closest_to(we_noticia_comentario, "dilma")
wordVectors::closest_to(we_noticia_comentario, "aécio")
library("wordVectors")
library("wordVectors")
we_noticia_comentario = read.binary.vectors("embeddings/folha_noticias_comentarios.bin")
wordVectors::closest_to(we_noticia_comentario, "dilma")
wordVectors::closest_to(we_noticia_comentario, "aécio")
wordVectors::closest_to(we_noticia_comentario, "desagradável")
wordVectors::closest_to(we_noticia_comentario, "afro")
wordVectors::closest_to(we_noticia_comentario, "caucasiano")
wordVectors::closest_to(we_noticia_comentario, "nordestino")
wordVectors::closest_to(we_noticia_comentario, "sulista")
wordVectors::closest_to(we_noticia_comentario, "masculino")
wordVectors::closest_to(we_noticia_comentario, "negro")
wordVectors::closest_to(we_noticia_comentario, "branco")
wordVectors::closest_to(we_noticia_comentario, "feminino")
wordVectors::closest_to(we_noticia_comentario, "temporário")
wordVectors::closest_to(we_noticia_comentario, "duradouro")
wordVectors::closest_to(we_noticia_comentario, "estável")
wordVectors::closest_to(we_noticia_comentario, "instável")
wordVectors::closest_to(we_noticia_comentario, "agradável")
wordVectors::closest_to(we_noticia_comentario, "desagradável")
library("wordVectors")
we_noticia_comentario = read.binary.vectors("embeddings/folha_noticias_comentarios.bin")
source("../../word_embeddings/cria_word_embedding.R")
source("../../utils/mongo_utils.R")
source("../../utils/utils.R")
source("busca_top_rated_comentarios.R")
data_inicio = "2014-01-01"
data_fim = "2014-12-31"
path_saida = "embeddings/"
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
setwd("~/workspace/PhD/src/vies_jornais/aplicacao_word2vec/word_embeddings/comentarios_noticias_eleicoes_2014")
source("../../word_embeddings/cria_word_embedding.R")
source("../../utils/mongo_utils.R")
source("../../utils/utils.R")
source("busca_top_rated_comentarios.R")
source("../../word_embeddings/cria_word_embedding.R")
source("../../utils/mongo_utils.R")
source("../../utils/utils.R")
data_inicio = "2014-01-01"
data_fim = "2014-12-31"
path_saida = "embeddings/"
partidos <- c("pmdb","ptb","pdt","pt","dem ","psb","psdb","ptc","psc","pmn","prp","pps","pv","pp","pstu","pcb","prtb","phs","psdc","pco","ptn","psl","prb","psol","ppl","pros","psd |psd[.]"," sd |sd[.]") #,"pr","pen", "pcdob", "ptdob"
candidatos <- c("dilma","aécio","levy","marina silva","luciana genro","eduardo jorge","josé maria","pastor everaldo", "iasi","eymael","rui costa","eduardo campos")
entity <- c(candidatos, partidos)
pattern <- paste(entity, collapse = "|")
noticias <- get_("folhaNoticiasProcessadas") %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo") %>% select(conteudo = conteudo_processado, idNoticia)
noticias <- get_todas_noticias_processadas() %>% filter(timestamp >= data_inicio & timestamp <= data_fim) %>% noticias_tema(pattern, "titulo") %>% select(conteudo = conteudo_processado, idNoticia)
View(noticias)
comentarios <- get_todos_comentarios() %>% filter(idNoticia %in% noticias$idNoticia) %>% select(conteudo = comentario_processado, idNoticia)
source("../../utils/mongo_utils.R")
comentarios <- get_todos_comentarios() %>% filter(idNoticia %in% noticias$idNoticia) %>% select(conteudo = comentario_processado, idNoticia)
View(comentarios)
conteudo = noticias %>% bind_rows(comentarios)
tema = "noticias_comentarios"
modelo_noticia_comentario = cria_word_embedding(tema = tema, n_layers = 300, noticias = conteudo, analogias = NULL, texto_col = "conteudo", path_saida = path_saida)
we_noticia_comentario = read.binary.vectors("embeddings/noticias_comentarios.bin")
library("wordVectors")
we_noticia_comentario = read.binary.vectors("embeddings/noticias_comentarios.bin")
wordVectors::closest_to(we_noticia_comentario, "dilma")
wordVectors::closest_to(we_noticia_comentario, "aécio")
wordVectors::closest_to(we_noticia_comentario, "aécio")
#wordVectors::closest_to(we_noticia_comentario, "afro")
wordVectors::closest_to(we_noticia_comentario, "negro")
#wordVectors::closest_to(we_noticia_comentario, "caucasiano")
wordVectors::closest_to(we_noticia_comentario, "branco")
wordVectors::closest_to(we_noticia_comentario, "caucasiano")
#wordVectors::closest_to(we_noticia_comentario, "branco")
wordVectors::closest_to(we_noticia_comentario, "afro")
#wordVectors::closest_to(we_noticia_comentario, "negro")
#wordVectors::closest_to(we_noticia_comentario, "caucasiano")
wordVectors::closest_to(we_noticia_comentario, "branco")
wordVectors::closest_to(we_noticia_comentario, "nordestino")
wordVectors::closest_to(we_noticia_comentario, "sulista")
wordVectors::closest_to(we_noticia_comentario, "masculino")
wordVectors::closest_to(we_noticia_comentario, "feminino")
wordVectors::closest_to(we_noticia_comentario, "estável")
wordVectors::closest_to(we_noticia_comentario, "instável")
wordVectors::closest_to(we_noticia_comentario, "agradável")
wordVectors::closest_to(we_noticia_comentario, "desagradável")
